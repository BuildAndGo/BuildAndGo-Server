{
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/api\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.spec.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.spec.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.spec.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.spec.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.spec.js"
      }
    },
    "ast": null,
    "code": "/* global describe beforeEach it */\nconst {\n  expect\n} = require('chai');\n\nconst request = require('supertest');\n\nconst db = require('../db');\n\nconst app = require('../index');\n\nconst User = db.model('user');\ndescribe('User routes', () => {\n  beforeEach(() => {\n    return db.sync({\n      force: true\n    });\n  });\n  describe('/api/users/', () => {\n    const codysEmail = 'cody@puppybook.com';\n    beforeEach(() => {\n      return User.create({\n        email: codysEmail\n      });\n    });\n    it('GET /api/users', () => {\n      return request(app).get('/api/users').expect(200).then(res => {\n        expect(res.body).to.be.an('array');\n        expect(res.body[0].email).to.be.equal(codysEmail);\n      });\n    });\n  }); // end describe('/api/users')\n}); // end describe('User routes')\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2FwaS91c2Vycy5zcGVjLmpzIl0sIm5hbWVzIjpbImV4cGVjdCIsInJlcXVpcmUiLCJyZXF1ZXN0IiwiZGIiLCJhcHAiLCJVc2VyIiwibW9kZWwiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJzeW5jIiwiZm9yY2UiLCJjb2R5c0VtYWlsIiwiY3JlYXRlIiwiZW1haWwiLCJpdCIsImdldCIsInRoZW4iLCJyZXMiLCJib2R5IiwidG8iLCJiZSIsImFuIiwiZXF1YWwiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTTtBQUFDQTtBQUFELElBQVdDLFFBQVEsTUFBUixDQUFqQjs7QUFDQSxNQUFNQyxVQUFVRCxRQUFRLFdBQVIsQ0FBaEI7O0FBQ0EsTUFBTUUsS0FBS0YsUUFBUSxPQUFSLENBQVg7O0FBQ0EsTUFBTUcsTUFBTUgsUUFBUSxVQUFSLENBQVo7O0FBQ0EsTUFBTUksT0FBT0YsR0FBR0csS0FBSCxDQUFTLE1BQVQsQ0FBYjtBQUVBQyxTQUFTLGFBQVQsRUFBd0IsTUFBTTtBQUM1QkMsYUFBVyxNQUFNO0FBQ2YsV0FBT0wsR0FBR00sSUFBSCxDQUFRO0FBQUNDLGFBQU87QUFBUixLQUFSLENBQVA7QUFDRCxHQUZEO0FBSUFILFdBQVMsYUFBVCxFQUF3QixNQUFNO0FBQzVCLFVBQU1JLGFBQWEsb0JBQW5CO0FBRUFILGVBQVcsTUFBTTtBQUNmLGFBQU9ILEtBQUtPLE1BQUwsQ0FBWTtBQUNqQkMsZUFBT0Y7QUFEVSxPQUFaLENBQVA7QUFHRCxLQUpEO0FBTUFHLE9BQUcsZ0JBQUgsRUFBcUIsTUFBTTtBQUN6QixhQUFPWixRQUFRRSxHQUFSLEVBQ0pXLEdBREksQ0FDQSxZQURBLEVBRUpmLE1BRkksQ0FFRyxHQUZILEVBR0pnQixJQUhJLENBR0NDLE9BQU87QUFDWGpCLGVBQU9pQixJQUFJQyxJQUFYLEVBQWlCQyxFQUFqQixDQUFvQkMsRUFBcEIsQ0FBdUJDLEVBQXZCLENBQTBCLE9BQTFCO0FBQ0FyQixlQUFPaUIsSUFBSUMsSUFBSixDQUFTLENBQVQsRUFBWUwsS0FBbkIsRUFBMEJNLEVBQTFCLENBQTZCQyxFQUE3QixDQUFnQ0UsS0FBaEMsQ0FBc0NYLFVBQXRDO0FBQ0QsT0FOSSxDQUFQO0FBT0QsS0FSRDtBQVNELEdBbEJELEVBTDRCLENBdUJ6QjtBQUNKLENBeEJELEUsQ0F3QkciLCJmaWxlIjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvYXBpL3VzZXJzLnNwZWMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvYXBpIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIGRlc2NyaWJlIGJlZm9yZUVhY2ggaXQgKi9cblxuY29uc3Qge2V4cGVjdH0gPSByZXF1aXJlKCdjaGFpJylcbmNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKCdzdXBlcnRlc3QnKVxuY29uc3QgZGIgPSByZXF1aXJlKCcuLi9kYicpXG5jb25zdCBhcHAgPSByZXF1aXJlKCcuLi9pbmRleCcpXG5jb25zdCBVc2VyID0gZGIubW9kZWwoJ3VzZXInKVxuXG5kZXNjcmliZSgnVXNlciByb3V0ZXMnLCAoKSA9PiB7XG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIHJldHVybiBkYi5zeW5jKHtmb3JjZTogdHJ1ZX0pXG4gIH0pXG5cbiAgZGVzY3JpYmUoJy9hcGkvdXNlcnMvJywgKCkgPT4ge1xuICAgIGNvbnN0IGNvZHlzRW1haWwgPSAnY29keUBwdXBweWJvb2suY29tJ1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICByZXR1cm4gVXNlci5jcmVhdGUoe1xuICAgICAgICBlbWFpbDogY29keXNFbWFpbFxuICAgICAgfSlcbiAgICB9KVxuXG4gICAgaXQoJ0dFVCAvYXBpL3VzZXJzJywgKCkgPT4ge1xuICAgICAgcmV0dXJuIHJlcXVlc3QoYXBwKVxuICAgICAgICAuZ2V0KCcvYXBpL3VzZXJzJylcbiAgICAgICAgLmV4cGVjdCgyMDApXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgZXhwZWN0KHJlcy5ib2R5KS50by5iZS5hbignYXJyYXknKVxuICAgICAgICAgIGV4cGVjdChyZXMuYm9keVswXS5lbWFpbCkudG8uYmUuZXF1YWwoY29keXNFbWFpbClcbiAgICAgICAgfSlcbiAgICB9KVxuICB9KSAvLyBlbmQgZGVzY3JpYmUoJy9hcGkvdXNlcnMnKVxufSkgLy8gZW5kIGRlc2NyaWJlKCdVc2VyIHJvdXRlcycpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.spec.js"
      ],
      "names": [
        "expect",
        "require",
        "request",
        "db",
        "app",
        "User",
        "model",
        "describe",
        "beforeEach",
        "sync",
        "force",
        "codysEmail",
        "create",
        "email",
        "it",
        "get",
        "then",
        "res",
        "body",
        "to",
        "be",
        "an",
        "equal"
      ],
      "mappings": "AAAA;AAEA,MAAM;AAACA;AAAD,IAAWC,QAAQ,MAAR,CAAjB;;AACA,MAAMC,UAAUD,QAAQ,WAAR,CAAhB;;AACA,MAAME,KAAKF,QAAQ,OAAR,CAAX;;AACA,MAAMG,MAAMH,QAAQ,UAAR,CAAZ;;AACA,MAAMI,OAAOF,GAAGG,KAAH,CAAS,MAAT,CAAb;AAEAC,SAAS,aAAT,EAAwB,MAAM;AAC5BC,aAAW,MAAM;AACf,WAAOL,GAAGM,IAAH,CAAQ;AAACC,aAAO;AAAR,KAAR,CAAP;AACD,GAFD;AAIAH,WAAS,aAAT,EAAwB,MAAM;AAC5B,UAAMI,aAAa,oBAAnB;AAEAH,eAAW,MAAM;AACf,aAAOH,KAAKO,MAAL,CAAY;AACjBC,eAAOF;AADU,OAAZ,CAAP;AAGD,KAJD;AAMAG,OAAG,gBAAH,EAAqB,MAAM;AACzB,aAAOZ,QAAQE,GAAR,EACJW,GADI,CACA,YADA,EAEJf,MAFI,CAEG,GAFH,EAGJgB,IAHI,CAGCC,OAAO;AACXjB,eAAOiB,IAAIC,IAAX,EAAiBC,EAAjB,CAAoBC,EAApB,CAAuBC,EAAvB,CAA0B,OAA1B;AACArB,eAAOiB,IAAIC,IAAJ,CAAS,CAAT,EAAYL,KAAnB,EAA0BM,EAA1B,CAA6BC,EAA7B,CAAgCE,KAAhC,CAAsCX,UAAtC;AACD,OANI,CAAP;AAOD,KARD;AASD,GAlBD,EAL4B,CAuBzB;AACJ,CAxBD,E,CAwBG",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.spec.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api",
      "sourcesContent": [
        "/* global describe beforeEach it */\n\nconst {expect} = require('chai')\nconst request = require('supertest')\nconst db = require('../db')\nconst app = require('../index')\nconst User = db.model('user')\n\ndescribe('User routes', () => {\n  beforeEach(() => {\n    return db.sync({force: true})\n  })\n\n  describe('/api/users/', () => {\n    const codysEmail = 'cody@puppybook.com'\n\n    beforeEach(() => {\n      return User.create({\n        email: codysEmail\n      })\n    })\n\n    it('GET /api/users', () => {\n      return request(app)\n        .get('/api/users')\n        .expect(200)\n        .then(res => {\n          expect(res.body).to.be.an('array')\n          expect(res.body[0].email).to.be.equal(codysEmail)\n        })\n    })\n  }) // end describe('/api/users')\n}) // end describe('User routes')\n"
      ]
    },
    "mtime": 1521231979800
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/index.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/index.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/index.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/index.js"
      }
    },
    "ast": null,
    "code": "const db = require('./db'); // register models\n\n\nrequire('./models');\n\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL2luZGV4LmpzIl0sIm5hbWVzIjpbImRiIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUtDLFFBQVEsTUFBUixDQUFYLEMsQ0FFQTs7O0FBQ0FBLFFBQVEsVUFBUjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQkgsRUFBakIiLCJmaWxlIjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvZGIvaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkYiA9IHJlcXVpcmUoJy4vZGInKVxuXG4vLyByZWdpc3RlciBtb2RlbHNcbnJlcXVpcmUoJy4vbW9kZWxzJylcblxubW9kdWxlLmV4cG9ydHMgPSBkYlxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/index.js"
      ],
      "names": [
        "db",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,KAAKC,QAAQ,MAAR,CAAX,C,CAEA;;;AACAA,QAAQ,UAAR;;AAEAC,OAAOC,OAAP,GAAiBH,EAAjB",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/index.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db",
      "sourcesContent": [
        "const db = require('./db')\n\n// register models\nrequire('./models')\n\nmodule.exports = db\n"
      ]
    },
    "mtime": 1521231979800
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/db.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/db.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/db.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/db.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/db.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst pkg = require('../../package.json');\n\nconst databaseName = pkg.name + (process.env.NODE_ENV === 'test' ? '-test' : '');\nconst db = new Sequelize(process.env.DATABASE_URL || `postgres://localhost:5432/${databaseName}`, {\n  logging: true\n});\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL2RiLmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJwa2ciLCJkYXRhYmFzZU5hbWUiLCJuYW1lIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiZGIiLCJEQVRBQkFTRV9VUkwiLCJsb2dnaW5nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsWUFBWUMsUUFBUSxXQUFSLENBQWxCOztBQUNBLE1BQU1DLE1BQU1ELFFBQVEsb0JBQVIsQ0FBWjs7QUFFQSxNQUFNRSxlQUFlRCxJQUFJRSxJQUFKLElBQVlDLFFBQVFDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixNQUF6QixHQUFrQyxPQUFsQyxHQUE0QyxFQUF4RCxDQUFyQjtBQUVBLE1BQU1DLEtBQUssSUFBSVIsU0FBSixDQUNUSyxRQUFRQyxHQUFSLENBQVlHLFlBQVosSUFBNkIsNkJBQTRCTixZQUFhLEVBRDdELEVBRVQ7QUFDRU8sV0FBUztBQURYLENBRlMsQ0FBWDtBQU1BQyxPQUFPQyxPQUFQLEdBQWlCSixFQUFqQiIsImZpbGUiOiIvaG9tZS9kYW5pZWxsZS9HSFAvU2VuaW9yL0J1aWxkQW5kR28tU2VydmVyL3NlcnZlci9kYi9kYi5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kYW5pZWxsZS9HSFAvU2VuaW9yL0J1aWxkQW5kR28tU2VydmVyL3NlcnZlci9kYiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpXG5jb25zdCBwa2cgPSByZXF1aXJlKCcuLi8uLi9wYWNrYWdlLmpzb24nKVxuXG5jb25zdCBkYXRhYmFzZU5hbWUgPSBwa2cubmFtZSArIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3QnID8gJy10ZXN0JyA6ICcnKVxuXG5jb25zdCBkYiA9IG5ldyBTZXF1ZWxpemUoXG4gIHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCB8fCBgcG9zdGdyZXM6Ly9sb2NhbGhvc3Q6NTQzMi8ke2RhdGFiYXNlTmFtZX1gLFxuICB7XG4gICAgbG9nZ2luZzogdHJ1ZSAgXG4gIH1cbilcbm1vZHVsZS5leHBvcnRzID0gZGJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/db.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "pkg",
        "databaseName",
        "name",
        "process",
        "env",
        "NODE_ENV",
        "db",
        "DATABASE_URL",
        "logging",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AACA,MAAMC,MAAMD,QAAQ,oBAAR,CAAZ;;AAEA,MAAME,eAAeD,IAAIE,IAAJ,IAAYC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,GAAkC,OAAlC,GAA4C,EAAxD,CAArB;AAEA,MAAMC,KAAK,IAAIR,SAAJ,CACTK,QAAQC,GAAR,CAAYG,YAAZ,IAA6B,6BAA4BN,YAAa,EAD7D,EAET;AACEO,WAAS;AADX,CAFS,CAAX;AAMAC,OAAOC,OAAP,GAAiBJ,EAAjB",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/db.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db",
      "sourcesContent": [
        "const Sequelize = require('sequelize')\nconst pkg = require('../../package.json')\n\nconst databaseName = pkg.name + (process.env.NODE_ENV === 'test' ? '-test' : '')\n\nconst db = new Sequelize(\n  process.env.DATABASE_URL || `postgres://localhost:5432/${databaseName}`,\n  {\n    logging: true  \n  }\n)\nmodule.exports = db\n"
      ]
    },
    "mtime": 1521315466249
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/index.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/index.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/index.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/index.js"
      }
    },
    "ast": null,
    "code": "const User = require('./user');\n\nconst Inventory = require('./inventory');\n\nconst Part = require('./part');\n\nconst Type = require('./type');\n\nUser.hasOne(Inventory);\nInventory.hasMany(Part);\nPart.belongsTo(Type);\nmodule.exports = {\n  User,\n  Inventory,\n  Part,\n  Type\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL21vZGVscy9pbmRleC5qcyJdLCJuYW1lcyI6WyJVc2VyIiwicmVxdWlyZSIsIkludmVudG9yeSIsIlBhcnQiLCJUeXBlIiwiaGFzT25lIiwiaGFzTWFueSIsImJlbG9uZ3NUbyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU9DLFFBQVEsUUFBUixDQUFiOztBQUNBLE1BQU1DLFlBQVlELFFBQVEsYUFBUixDQUFsQjs7QUFDQSxNQUFNRSxPQUFPRixRQUFRLFFBQVIsQ0FBYjs7QUFDQSxNQUFNRyxPQUFPSCxRQUFRLFFBQVIsQ0FBYjs7QUFFQUQsS0FBS0ssTUFBTCxDQUFZSCxTQUFaO0FBQ0FBLFVBQVVJLE9BQVYsQ0FBa0JILElBQWxCO0FBQ0FBLEtBQUtJLFNBQUwsQ0FBZUgsSUFBZjtBQUVBSSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZULE1BRGU7QUFFZkUsV0FGZTtBQUdmQyxNQUhlO0FBSWZDO0FBSmUsQ0FBakIiLCJmaWxlIjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvZGIvbW9kZWxzL2luZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVzZXIgPSByZXF1aXJlKCcuL3VzZXInKTtcbmNvbnN0IEludmVudG9yeSA9IHJlcXVpcmUoJy4vaW52ZW50b3J5Jyk7XG5jb25zdCBQYXJ0ID0gcmVxdWlyZSgnLi9wYXJ0Jyk7XG5jb25zdCBUeXBlID0gcmVxdWlyZSgnLi90eXBlJyk7XG5cblVzZXIuaGFzT25lKEludmVudG9yeSk7XG5JbnZlbnRvcnkuaGFzTWFueShQYXJ0KTtcblBhcnQuYmVsb25nc1RvKFR5cGUpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgVXNlcixcbiAgSW52ZW50b3J5LFxuICBQYXJ0LFxuICBUeXBlXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/index.js"
      ],
      "names": [
        "User",
        "require",
        "Inventory",
        "Part",
        "Type",
        "hasOne",
        "hasMany",
        "belongsTo",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAOC,QAAQ,QAAR,CAAb;;AACA,MAAMC,YAAYD,QAAQ,aAAR,CAAlB;;AACA,MAAME,OAAOF,QAAQ,QAAR,CAAb;;AACA,MAAMG,OAAOH,QAAQ,QAAR,CAAb;;AAEAD,KAAKK,MAAL,CAAYH,SAAZ;AACAA,UAAUI,OAAV,CAAkBH,IAAlB;AACAA,KAAKI,SAAL,CAAeH,IAAf;AAEAI,OAAOC,OAAP,GAAiB;AACfT,MADe;AAEfE,WAFe;AAGfC,MAHe;AAIfC;AAJe,CAAjB",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/index.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "sourcesContent": [
        "const User = require('./user');\nconst Inventory = require('./inventory');\nconst Part = require('./part');\nconst Type = require('./type');\n\nUser.hasOne(Inventory);\nInventory.hasMany(Part);\nPart.belongsTo(Type);\n\nmodule.exports = {\n  User,\n  Inventory,\n  Part,\n  Type\n}\n"
      ]
    },
    "mtime": 1521317653866
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.js"
      }
    },
    "ast": null,
    "code": "const crypto = require('crypto');\n\nconst Sequelize = require('sequelize');\n\nconst db = require('../db');\n\nconst User = db.define('user', {\n  email: {\n    type: Sequelize.STRING,\n    unique: true,\n    allowNull: false\n  },\n  password: {\n    type: Sequelize.STRING,\n\n    // Making `.password` act like a func hides it when serializing to JSON.\n    // This is a hack to get around Sequelize's lack of a \"private\" option.\n    get() {\n      return () => this.getDataValue('password');\n    }\n\n  },\n  salt: {\n    type: Sequelize.STRING,\n\n    // Making `.salt` act like a function hides it when serializing to JSON.\n    // This is a hack to get around Sequelize's lack of a \"private\" option.\n    get() {\n      return () => this.getDataValue('salt');\n    }\n\n  },\n  googleId: {\n    type: Sequelize.STRING\n  }\n});\nmodule.exports = User;\n/**\n * instanceMethods\n */\n\nUser.prototype.correctPassword = function (candidatePwd) {\n  return User.encryptPassword(candidatePwd, this.salt()) === this.password();\n};\n/**\n * classMethods\n */\n\n\nUser.generateSalt = function () {\n  return crypto.randomBytes(16).toString('base64');\n};\n\nUser.encryptPassword = function (plainText, salt) {\n  return crypto.createHash('RSA-SHA256').update(plainText).update(salt).digest('hex');\n};\n/**\n * hooks\n */\n\n\nconst setSaltAndPassword = user => {\n  if (user.changed('password')) {\n    user.salt = User.generateSalt();\n    user.password = User.encryptPassword(user.password(), user.salt());\n  }\n};\n\nUser.beforeCreate(setSaltAndPassword);\nUser.beforeUpdate(setSaltAndPassword);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL21vZGVscy91c2VyLmpzIl0sIm5hbWVzIjpbImNyeXB0byIsInJlcXVpcmUiLCJTZXF1ZWxpemUiLCJkYiIsIlVzZXIiLCJkZWZpbmUiLCJlbWFpbCIsInR5cGUiLCJTVFJJTkciLCJ1bmlxdWUiLCJhbGxvd051bGwiLCJwYXNzd29yZCIsImdldCIsImdldERhdGFWYWx1ZSIsInNhbHQiLCJnb29nbGVJZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm90b3R5cGUiLCJjb3JyZWN0UGFzc3dvcmQiLCJjYW5kaWRhdGVQd2QiLCJlbmNyeXB0UGFzc3dvcmQiLCJnZW5lcmF0ZVNhbHQiLCJyYW5kb21CeXRlcyIsInRvU3RyaW5nIiwicGxhaW5UZXh0IiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCIsInNldFNhbHRBbmRQYXNzd29yZCIsInVzZXIiLCJjaGFuZ2VkIiwiYmVmb3JlQ3JlYXRlIiwiYmVmb3JlVXBkYXRlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTQyxRQUFRLFFBQVIsQ0FBZjs7QUFDQSxNQUFNQyxZQUFZRCxRQUFRLFdBQVIsQ0FBbEI7O0FBQ0EsTUFBTUUsS0FBS0YsUUFBUSxPQUFSLENBQVg7O0FBRUEsTUFBTUcsT0FBT0QsR0FBR0UsTUFBSCxDQUFVLE1BQVYsRUFBa0I7QUFDN0JDLFNBQU87QUFDTEMsVUFBTUwsVUFBVU0sTUFEWDtBQUVMQyxZQUFRLElBRkg7QUFHTEMsZUFBVztBQUhOLEdBRHNCO0FBTTdCQyxZQUFVO0FBQ1JKLFVBQU1MLFVBQVVNLE1BRFI7O0FBRVI7QUFDQTtBQUNBSSxVQUFNO0FBQ0osYUFBTyxNQUFNLEtBQUtDLFlBQUwsQ0FBa0IsVUFBbEIsQ0FBYjtBQUNEOztBQU5PLEdBTm1CO0FBYzdCQyxRQUFNO0FBQ0pQLFVBQU1MLFVBQVVNLE1BRFo7O0FBRUo7QUFDQTtBQUNBSSxVQUFPO0FBQ0wsYUFBTyxNQUFNLEtBQUtDLFlBQUwsQ0FBa0IsTUFBbEIsQ0FBYjtBQUNEOztBQU5HLEdBZHVCO0FBc0I3QkUsWUFBVTtBQUNSUixVQUFNTCxVQUFVTTtBQURSO0FBdEJtQixDQUFsQixDQUFiO0FBMkJBUSxPQUFPQyxPQUFQLEdBQWlCYixJQUFqQjtBQUVBOzs7O0FBR0FBLEtBQUtjLFNBQUwsQ0FBZUMsZUFBZixHQUFpQyxVQUFVQyxZQUFWLEVBQXdCO0FBQ3ZELFNBQU9oQixLQUFLaUIsZUFBTCxDQUFxQkQsWUFBckIsRUFBbUMsS0FBS04sSUFBTCxFQUFuQyxNQUFvRCxLQUFLSCxRQUFMLEVBQTNEO0FBQ0QsQ0FGRDtBQUlBOzs7OztBQUdBUCxLQUFLa0IsWUFBTCxHQUFvQixZQUFZO0FBQzlCLFNBQU90QixPQUFPdUIsV0FBUCxDQUFtQixFQUFuQixFQUF1QkMsUUFBdkIsQ0FBZ0MsUUFBaEMsQ0FBUDtBQUNELENBRkQ7O0FBSUFwQixLQUFLaUIsZUFBTCxHQUF1QixVQUFVSSxTQUFWLEVBQXFCWCxJQUFyQixFQUEyQjtBQUNoRCxTQUFPZCxPQUNKMEIsVUFESSxDQUNPLFlBRFAsRUFFSkMsTUFGSSxDQUVHRixTQUZILEVBR0pFLE1BSEksQ0FHR2IsSUFISCxFQUlKYyxNQUpJLENBSUcsS0FKSCxDQUFQO0FBS0QsQ0FORDtBQVFBOzs7OztBQUdBLE1BQU1DLHFCQUFxQkMsUUFBUTtBQUNqQyxNQUFJQSxLQUFLQyxPQUFMLENBQWEsVUFBYixDQUFKLEVBQThCO0FBQzVCRCxTQUFLaEIsSUFBTCxHQUFZVixLQUFLa0IsWUFBTCxFQUFaO0FBQ0FRLFNBQUtuQixRQUFMLEdBQWdCUCxLQUFLaUIsZUFBTCxDQUFxQlMsS0FBS25CLFFBQUwsRUFBckIsRUFBc0NtQixLQUFLaEIsSUFBTCxFQUF0QyxDQUFoQjtBQUNEO0FBQ0YsQ0FMRDs7QUFPQVYsS0FBSzRCLFlBQUwsQ0FBa0JILGtCQUFsQjtBQUNBekIsS0FBSzZCLFlBQUwsQ0FBa0JKLGtCQUFsQiIsImZpbGUiOiIvaG9tZS9kYW5pZWxsZS9HSFAvU2VuaW9yL0J1aWxkQW5kR28tU2VydmVyL3NlcnZlci9kYi9tb2RlbHMvdXNlci5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kYW5pZWxsZS9HSFAvU2VuaW9yL0J1aWxkQW5kR28tU2VydmVyL3NlcnZlci9kYi9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKVxuY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJylcbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vZGInKVxuXG5jb25zdCBVc2VyID0gZGIuZGVmaW5lKCd1c2VyJywge1xuICBlbWFpbDoge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIGFsbG93TnVsbDogZmFsc2VcbiAgfSxcbiAgcGFzc3dvcmQ6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgIC8vIE1ha2luZyBgLnBhc3N3b3JkYCBhY3QgbGlrZSBhIGZ1bmMgaGlkZXMgaXQgd2hlbiBzZXJpYWxpemluZyB0byBKU09OLlxuICAgIC8vIFRoaXMgaXMgYSBoYWNrIHRvIGdldCBhcm91bmQgU2VxdWVsaXplJ3MgbGFjayBvZiBhIFwicHJpdmF0ZVwiIG9wdGlvbi5cbiAgICBnZXQoKSB7XG4gICAgICByZXR1cm4gKCkgPT4gdGhpcy5nZXREYXRhVmFsdWUoJ3Bhc3N3b3JkJylcbiAgICB9XG4gIH0sXG4gIHNhbHQ6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgIC8vIE1ha2luZyBgLnNhbHRgIGFjdCBsaWtlIGEgZnVuY3Rpb24gaGlkZXMgaXQgd2hlbiBzZXJpYWxpemluZyB0byBKU09OLlxuICAgIC8vIFRoaXMgaXMgYSBoYWNrIHRvIGdldCBhcm91bmQgU2VxdWVsaXplJ3MgbGFjayBvZiBhIFwicHJpdmF0ZVwiIG9wdGlvbi5cbiAgICBnZXQgKCkge1xuICAgICAgcmV0dXJuICgpID0+IHRoaXMuZ2V0RGF0YVZhbHVlKCdzYWx0JylcbiAgICB9XG4gIH0sXG4gIGdvb2dsZUlkOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICB9XG59KVxuXG5tb2R1bGUuZXhwb3J0cyA9IFVzZXI7XG5cbi8qKlxuICogaW5zdGFuY2VNZXRob2RzXG4gKi9cblVzZXIucHJvdG90eXBlLmNvcnJlY3RQYXNzd29yZCA9IGZ1bmN0aW9uIChjYW5kaWRhdGVQd2QpIHtcbiAgcmV0dXJuIFVzZXIuZW5jcnlwdFBhc3N3b3JkKGNhbmRpZGF0ZVB3ZCwgdGhpcy5zYWx0KCkpID09PSB0aGlzLnBhc3N3b3JkKClcbn1cblxuLyoqXG4gKiBjbGFzc01ldGhvZHNcbiAqL1xuVXNlci5nZW5lcmF0ZVNhbHQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoMTYpLnRvU3RyaW5nKCdiYXNlNjQnKVxufVxuXG5Vc2VyLmVuY3J5cHRQYXNzd29yZCA9IGZ1bmN0aW9uIChwbGFpblRleHQsIHNhbHQpIHtcbiAgcmV0dXJuIGNyeXB0b1xuICAgIC5jcmVhdGVIYXNoKCdSU0EtU0hBMjU2JylcbiAgICAudXBkYXRlKHBsYWluVGV4dClcbiAgICAudXBkYXRlKHNhbHQpXG4gICAgLmRpZ2VzdCgnaGV4Jylcbn1cblxuLyoqXG4gKiBob29rc1xuICovXG5jb25zdCBzZXRTYWx0QW5kUGFzc3dvcmQgPSB1c2VyID0+IHtcbiAgaWYgKHVzZXIuY2hhbmdlZCgncGFzc3dvcmQnKSkge1xuICAgIHVzZXIuc2FsdCA9IFVzZXIuZ2VuZXJhdGVTYWx0KClcbiAgICB1c2VyLnBhc3N3b3JkID0gVXNlci5lbmNyeXB0UGFzc3dvcmQodXNlci5wYXNzd29yZCgpLCB1c2VyLnNhbHQoKSlcbiAgfVxufVxuXG5Vc2VyLmJlZm9yZUNyZWF0ZShzZXRTYWx0QW5kUGFzc3dvcmQpXG5Vc2VyLmJlZm9yZVVwZGF0ZShzZXRTYWx0QW5kUGFzc3dvcmQpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.js"
      ],
      "names": [
        "crypto",
        "require",
        "Sequelize",
        "db",
        "User",
        "define",
        "email",
        "type",
        "STRING",
        "unique",
        "allowNull",
        "password",
        "get",
        "getDataValue",
        "salt",
        "googleId",
        "module",
        "exports",
        "prototype",
        "correctPassword",
        "candidatePwd",
        "encryptPassword",
        "generateSalt",
        "randomBytes",
        "toString",
        "plainText",
        "createHash",
        "update",
        "digest",
        "setSaltAndPassword",
        "user",
        "changed",
        "beforeCreate",
        "beforeUpdate"
      ],
      "mappings": "AAAA,MAAMA,SAASC,QAAQ,QAAR,CAAf;;AACA,MAAMC,YAAYD,QAAQ,WAAR,CAAlB;;AACA,MAAME,KAAKF,QAAQ,OAAR,CAAX;;AAEA,MAAMG,OAAOD,GAAGE,MAAH,CAAU,MAAV,EAAkB;AAC7BC,SAAO;AACLC,UAAML,UAAUM,MADX;AAELC,YAAQ,IAFH;AAGLC,eAAW;AAHN,GADsB;AAM7BC,YAAU;AACRJ,UAAML,UAAUM,MADR;;AAER;AACA;AACAI,UAAM;AACJ,aAAO,MAAM,KAAKC,YAAL,CAAkB,UAAlB,CAAb;AACD;;AANO,GANmB;AAc7BC,QAAM;AACJP,UAAML,UAAUM,MADZ;;AAEJ;AACA;AACAI,UAAO;AACL,aAAO,MAAM,KAAKC,YAAL,CAAkB,MAAlB,CAAb;AACD;;AANG,GAduB;AAsB7BE,YAAU;AACRR,UAAML,UAAUM;AADR;AAtBmB,CAAlB,CAAb;AA2BAQ,OAAOC,OAAP,GAAiBb,IAAjB;AAEA;;;;AAGAA,KAAKc,SAAL,CAAeC,eAAf,GAAiC,UAAUC,YAAV,EAAwB;AACvD,SAAOhB,KAAKiB,eAAL,CAAqBD,YAArB,EAAmC,KAAKN,IAAL,EAAnC,MAAoD,KAAKH,QAAL,EAA3D;AACD,CAFD;AAIA;;;;;AAGAP,KAAKkB,YAAL,GAAoB,YAAY;AAC9B,SAAOtB,OAAOuB,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,QAAhC,CAAP;AACD,CAFD;;AAIApB,KAAKiB,eAAL,GAAuB,UAAUI,SAAV,EAAqBX,IAArB,EAA2B;AAChD,SAAOd,OACJ0B,UADI,CACO,YADP,EAEJC,MAFI,CAEGF,SAFH,EAGJE,MAHI,CAGGb,IAHH,EAIJc,MAJI,CAIG,KAJH,CAAP;AAKD,CAND;AAQA;;;;;AAGA,MAAMC,qBAAqBC,QAAQ;AACjC,MAAIA,KAAKC,OAAL,CAAa,UAAb,CAAJ,EAA8B;AAC5BD,SAAKhB,IAAL,GAAYV,KAAKkB,YAAL,EAAZ;AACAQ,SAAKnB,QAAL,GAAgBP,KAAKiB,eAAL,CAAqBS,KAAKnB,QAAL,EAArB,EAAsCmB,KAAKhB,IAAL,EAAtC,CAAhB;AACD;AACF,CALD;;AAOAV,KAAK4B,YAAL,CAAkBH,kBAAlB;AACAzB,KAAK6B,YAAL,CAAkBJ,kBAAlB",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "sourcesContent": [
        "const crypto = require('crypto')\nconst Sequelize = require('sequelize')\nconst db = require('../db')\n\nconst User = db.define('user', {\n  email: {\n    type: Sequelize.STRING,\n    unique: true,\n    allowNull: false\n  },\n  password: {\n    type: Sequelize.STRING,\n    // Making `.password` act like a func hides it when serializing to JSON.\n    // This is a hack to get around Sequelize's lack of a \"private\" option.\n    get() {\n      return () => this.getDataValue('password')\n    }\n  },\n  salt: {\n    type: Sequelize.STRING,\n    // Making `.salt` act like a function hides it when serializing to JSON.\n    // This is a hack to get around Sequelize's lack of a \"private\" option.\n    get () {\n      return () => this.getDataValue('salt')\n    }\n  },\n  googleId: {\n    type: Sequelize.STRING\n  }\n})\n\nmodule.exports = User;\n\n/**\n * instanceMethods\n */\nUser.prototype.correctPassword = function (candidatePwd) {\n  return User.encryptPassword(candidatePwd, this.salt()) === this.password()\n}\n\n/**\n * classMethods\n */\nUser.generateSalt = function () {\n  return crypto.randomBytes(16).toString('base64')\n}\n\nUser.encryptPassword = function (plainText, salt) {\n  return crypto\n    .createHash('RSA-SHA256')\n    .update(plainText)\n    .update(salt)\n    .digest('hex')\n}\n\n/**\n * hooks\n */\nconst setSaltAndPassword = user => {\n  if (user.changed('password')) {\n    user.salt = User.generateSalt()\n    user.password = User.encryptPassword(user.password(), user.salt())\n  }\n}\n\nUser.beforeCreate(setSaltAndPassword)\nUser.beforeUpdate(setSaltAndPassword)\n"
      ]
    },
    "mtime": 1521315226181
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/inventory.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/inventory.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/inventory.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/inventory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/inventory.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/inventory.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst db = require('../db');\n\nconst Inventory = db.define('inventory', {\n  quantity: {\n    type: Sequelize.INTEGER\n  }\n}); //leaving off getter methods for the userId and partsId\n\nmodule.exports = Inventory;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL21vZGVscy9pbnZlbnRvcnkuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsImRiIiwiSW52ZW50b3J5IiwiZGVmaW5lIiwicXVhbnRpdHkiLCJ0eXBlIiwiSU5URUdFUiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFlBQVlDLFFBQVEsV0FBUixDQUFsQjs7QUFDQSxNQUFNQyxLQUFLRCxRQUFRLE9BQVIsQ0FBWDs7QUFFQSxNQUFNRSxZQUFZRCxHQUFHRSxNQUFILENBQVUsV0FBVixFQUF1QjtBQUNyQ0MsWUFBVTtBQUNOQyxVQUFNTixVQUFVTztBQURWO0FBRDJCLENBQXZCLENBQWxCLEMsQ0FNQzs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQk4sU0FBakIiLCJmaWxlIjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvZGIvbW9kZWxzL2ludmVudG9yeS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9kYW5pZWxsZS9HSFAvU2VuaW9yL0J1aWxkQW5kR28tU2VydmVyL3NlcnZlci9kYi9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vZGInKTtcblxuY29uc3QgSW52ZW50b3J5ID0gZGIuZGVmaW5lKCdpbnZlbnRvcnknLCB7XG4gICAgcXVhbnRpdHk6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgfVxufSk7XG5cbiAvL2xlYXZpbmcgb2ZmIGdldHRlciBtZXRob2RzIGZvciB0aGUgdXNlcklkIGFuZCBwYXJ0c0lkXG5cbm1vZHVsZS5leHBvcnRzID0gSW52ZW50b3J5OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/inventory.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "db",
        "Inventory",
        "define",
        "quantity",
        "type",
        "INTEGER",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AACA,MAAMC,KAAKD,QAAQ,OAAR,CAAX;;AAEA,MAAME,YAAYD,GAAGE,MAAH,CAAU,WAAV,EAAuB;AACrCC,YAAU;AACNC,UAAMN,UAAUO;AADV;AAD2B,CAAvB,CAAlB,C,CAMC;;AAEDC,OAAOC,OAAP,GAAiBN,SAAjB",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/inventory.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\nconst db = require('../db');\n\nconst Inventory = db.define('inventory', {\n    quantity: {\n        type: Sequelize.INTEGER,\n    }\n});\n\n //leaving off getter methods for the userId and partsId\n\nmodule.exports = Inventory;"
      ]
    },
    "mtime": 1521233116065
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/part.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/part.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/part.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/part.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/part.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/part.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst db = require('../db');\n\nconst Part = db.define('part', {\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  image: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  points: {\n    type: Sequelize.INTEGER,\n    allowNull: false\n  }\n}); //leaving off a getter method for the typeId\n\nmodule.exports = Part;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL21vZGVscy9wYXJ0LmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJkYiIsIlBhcnQiLCJkZWZpbmUiLCJuYW1lIiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsImltYWdlIiwicG9pbnRzIiwiSU5URUdFUiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFlBQVlDLFFBQVEsV0FBUixDQUFsQjs7QUFDQSxNQUFNQyxLQUFLRCxRQUFRLE9BQVIsQ0FBWDs7QUFFQSxNQUFNRSxPQUFPRCxHQUFHRSxNQUFILENBQVUsTUFBVixFQUFrQjtBQUMzQkMsUUFBTTtBQUNGQyxVQUFNTixVQUFVTyxNQURkO0FBRUZDLGVBQVc7QUFGVCxHQURxQjtBQUszQkMsU0FBTztBQUNISCxVQUFNTixVQUFVTyxNQURiO0FBRUhDLGVBQVc7QUFGUixHQUxvQjtBQVMzQkUsVUFBUTtBQUNKSixVQUFNTixVQUFVVyxPQURaO0FBRUpILGVBQVc7QUFGUDtBQVRtQixDQUFsQixDQUFiLEMsQ0FlQzs7QUFFREksT0FBT0MsT0FBUCxHQUFpQlYsSUFBakIiLCJmaWxlIjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvZGIvbW9kZWxzL3BhcnQuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvZGIvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBkYiA9IHJlcXVpcmUoJy4uL2RiJyk7XG5cbmNvbnN0IFBhcnQgPSBkYi5kZWZpbmUoJ3BhcnQnLCB7XG4gICAgbmFtZToge1xuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBpbWFnZToge1xuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBwb2ludHM6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9XG59KTtcblxuIC8vbGVhdmluZyBvZmYgYSBnZXR0ZXIgbWV0aG9kIGZvciB0aGUgdHlwZUlkXG5cbm1vZHVsZS5leHBvcnRzID0gUGFydDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/part.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "db",
        "Part",
        "define",
        "name",
        "type",
        "STRING",
        "allowNull",
        "image",
        "points",
        "INTEGER",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AACA,MAAMC,KAAKD,QAAQ,OAAR,CAAX;;AAEA,MAAME,OAAOD,GAAGE,MAAH,CAAU,MAAV,EAAkB;AAC3BC,QAAM;AACFC,UAAMN,UAAUO,MADd;AAEFC,eAAW;AAFT,GADqB;AAK3BC,SAAO;AACHH,UAAMN,UAAUO,MADb;AAEHC,eAAW;AAFR,GALoB;AAS3BE,UAAQ;AACJJ,UAAMN,UAAUW,OADZ;AAEJH,eAAW;AAFP;AATmB,CAAlB,CAAb,C,CAeC;;AAEDI,OAAOC,OAAP,GAAiBV,IAAjB",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/part.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\nconst db = require('../db');\n\nconst Part = db.define('part', {\n    name: {\n        type: Sequelize.STRING,\n        allowNull: false\n    },\n    image: {\n        type: Sequelize.STRING,\n        allowNull: false\n    },\n    points: {\n        type: Sequelize.INTEGER,\n        allowNull: false\n    }\n});\n\n //leaving off a getter method for the typeId\n\nmodule.exports = Part;"
      ]
    },
    "mtime": 1521315580000
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/type.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/type.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/type.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/type.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/type.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/type.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst db = require('../db');\n\nconst Type = db.define('type', {\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false\n  },\n  quantityNeeded: {\n    type: Sequelize.INTEGER,\n    allowNull: false\n  },\n  image: {\n    type: Sequelize.STRING\n  }\n});\nmodule.exports = Type;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL21vZGVscy90eXBlLmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJkYiIsIlR5cGUiLCJkZWZpbmUiLCJuYW1lIiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsInF1YW50aXR5TmVlZGVkIiwiSU5URUdFUiIsImltYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsWUFBWUMsUUFBUSxXQUFSLENBQWxCOztBQUNBLE1BQU1DLEtBQUtELFFBQVEsT0FBUixDQUFYOztBQUVBLE1BQU1FLE9BQU9ELEdBQUdFLE1BQUgsQ0FBVSxNQUFWLEVBQWtCO0FBQzNCQyxRQUFNO0FBQ0ZDLFVBQU1OLFVBQVVPLE1BRGQ7QUFFRkMsZUFBVztBQUZULEdBRHFCO0FBSzNCQyxrQkFBZ0I7QUFDWkgsVUFBTU4sVUFBVVUsT0FESjtBQUVaRixlQUFXO0FBRkMsR0FMVztBQVMzQkcsU0FBTztBQUNITCxVQUFNTixVQUFVTztBQURiO0FBVG9CLENBQWxCLENBQWI7QUFjQUssT0FBT0MsT0FBUCxHQUFpQlYsSUFBakIiLCJmaWxlIjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvZGIvbW9kZWxzL3R5cGUuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvZGIvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBkYiA9IHJlcXVpcmUoJy4uL2RiJyk7XG5cbmNvbnN0IFR5cGUgPSBkYi5kZWZpbmUoJ3R5cGUnLCB7XG4gICAgbmFtZToge1xuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBxdWFudGl0eU5lZWRlZDoge1xuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgaW1hZ2U6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFR5cGU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/type.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "db",
        "Type",
        "define",
        "name",
        "type",
        "STRING",
        "allowNull",
        "quantityNeeded",
        "INTEGER",
        "image",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,YAAYC,QAAQ,WAAR,CAAlB;;AACA,MAAMC,KAAKD,QAAQ,OAAR,CAAX;;AAEA,MAAME,OAAOD,GAAGE,MAAH,CAAU,MAAV,EAAkB;AAC3BC,QAAM;AACFC,UAAMN,UAAUO,MADd;AAEFC,eAAW;AAFT,GADqB;AAK3BC,kBAAgB;AACZH,UAAMN,UAAUU,OADJ;AAEZF,eAAW;AAFC,GALW;AAS3BG,SAAO;AACHL,UAAMN,UAAUO;AADb;AAToB,CAAlB,CAAb;AAcAK,OAAOC,OAAP,GAAiBV,IAAjB",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/type.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\nconst db = require('../db');\n\nconst Type = db.define('type', {\n    name: {\n        type: Sequelize.STRING,\n        allowNull: false\n    },\n    quantityNeeded: {\n        type: Sequelize.INTEGER,\n        allowNull: false\n    },\n    image: {\n        type: Sequelize.STRING\n    }\n});\n\nmodule.exports = Type;"
      ]
    },
    "mtime": 1521316185102
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/index.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/index.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/index.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/index.js"
      }
    },
    "ast": null,
    "code": "const path = require('path');\n\nconst express = require('express');\n\nconst morgan = require('morgan');\n\nconst bodyParser = require('body-parser');\n\nconst compression = require('compression');\n\nconst session = require('express-session');\n\nconst passport = require('passport');\n\nconst SequelizeStore = require('connect-session-sequelize')(session.Store);\n\nconst db = require('./db');\n\nconst sessionStore = new SequelizeStore({\n  db\n});\nconst PORT = process.env.PORT || 8080;\nconst app = express();\n\nconst socketio = require('socket.io');\n\nmodule.exports = app;\n/**\n * In your development environment, you can keep all of your\n * app's secret API keys in a file called `secrets.js`, in your project\n * root. This file is included in the .gitignore - it will NOT be tracked\n * or show up on Github. On your production server, you can add these\n * keys as environment variables, so that they can still be read by the\n * Node process on process.env\n */\n\nif (process.env.NODE_ENV !== 'production') require('../secrets'); // passport registration\n\npassport.serializeUser((user, done) => done(null, user.id));\npassport.deserializeUser((id, done) => db.models.user.findById(id).then(user => done(null, user)).catch(done));\n\nconst createApp = () => {\n  // logging middleware\n  app.use(morgan('dev')); // body parsing middleware\n\n  app.use(bodyParser.json());\n  app.use(bodyParser.urlencoded({\n    extended: true\n  })); // compression middleware\n\n  app.use(compression()); // session middleware with passport\n\n  app.use(session({\n    secret: process.env.SESSION_SECRET || 'my best friend is Cody',\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false\n  }));\n  app.use(passport.initialize());\n  app.use(passport.session()); // auth and api routes\n\n  app.use('/auth', require('./auth'));\n  app.use('/api', require('./api')); // static file-serving middleware\n\n  app.use(express.static(path.join(__dirname, '..', 'public'))); // any remaining requests with an extension (.js, .css, etc.) send 404\n\n  app.use((req, res, next) => {\n    if (path.extname(req.path).length) {\n      const err = new Error('Not found');\n      err.status = 404;\n      next(err);\n    } else {\n      next();\n    }\n  }); // sends index.html\n\n  app.use('*', (req, res) => {\n    res.sendFile(path.join(__dirname, '..', 'public/index.html'));\n  }); // error handling endware\n\n  app.use((err, req, res, next) => {\n    console.error(err);\n    console.error(err.stack);\n    res.status(err.status || 500).send(err.message || 'Internal server error.');\n  });\n};\n\nconst startListening = () => {\n  // start listening (and create a 'server' object representing our server)\n  const server = app.listen(PORT, () => console.log(`Mixing it up on port ${PORT}`)); // set up our socket control center\n\n  const io = socketio(server);\n\n  require('./socket')(io);\n};\n\nconst syncDb = () => db.sync({\n  force: false\n}); // This evaluates as true when this file is run directly from the command line,\n// i.e. when we say 'node server/index.js' (or 'nodemon server/index.js', or 'nodemon server', etc)\n// It will evaluate false when this module is required by another module - for example,\n// if we wanted to require our app in a test spec\n\n\nif (require.main === module) {\n  sessionStore.sync().then(syncDb).then(createApp).then(startListening);\n} else {\n  createApp();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/index.js"
      ],
      "names": [
        "path",
        "require",
        "express",
        "morgan",
        "bodyParser",
        "compression",
        "session",
        "passport",
        "SequelizeStore",
        "Store",
        "db",
        "sessionStore",
        "PORT",
        "process",
        "env",
        "app",
        "socketio",
        "module",
        "exports",
        "NODE_ENV",
        "serializeUser",
        "user",
        "done",
        "id",
        "deserializeUser",
        "models",
        "findById",
        "then",
        "catch",
        "createApp",
        "use",
        "json",
        "urlencoded",
        "extended",
        "secret",
        "SESSION_SECRET",
        "store",
        "resave",
        "saveUninitialized",
        "initialize",
        "static",
        "join",
        "__dirname",
        "req",
        "res",
        "next",
        "extname",
        "length",
        "err",
        "Error",
        "status",
        "sendFile",
        "console",
        "error",
        "stack",
        "send",
        "message",
        "startListening",
        "server",
        "listen",
        "log",
        "io",
        "syncDb",
        "sync",
        "force",
        "main"
      ],
      "mappings": "AAAA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;;AACA,MAAMC,UAAUD,QAAQ,SAAR,CAAhB;;AACA,MAAME,SAASF,QAAQ,QAAR,CAAf;;AACA,MAAMG,aAAaH,QAAQ,aAAR,CAAnB;;AACA,MAAMI,cAAcJ,QAAQ,aAAR,CAApB;;AACA,MAAMK,UAAUL,QAAQ,iBAAR,CAAhB;;AACA,MAAMM,WAAWN,QAAQ,UAAR,CAAjB;;AACA,MAAMO,iBAAiBP,QAAQ,2BAAR,EAAqCK,QAAQG,KAA7C,CAAvB;;AACA,MAAMC,KAAKT,QAAQ,MAAR,CAAX;;AACA,MAAMU,eAAe,IAAIH,cAAJ,CAAmB;AAACE;AAAD,CAAnB,CAArB;AACA,MAAME,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,MAAMG,MAAMb,SAAZ;;AACA,MAAMc,WAAWf,QAAQ,WAAR,CAAjB;;AACAgB,OAAOC,OAAP,GAAiBH,GAAjB;AAEA;;;;;;;;;AAQA,IAAIF,QAAQC,GAAR,CAAYK,QAAZ,KAAyB,YAA7B,EAA2ClB,QAAQ,YAAR,E,CAE3C;;AACAM,SAASa,aAAT,CAAuB,CAACC,IAAD,EAAOC,IAAP,KAAgBA,KAAK,IAAL,EAAWD,KAAKE,EAAhB,CAAvC;AACAhB,SAASiB,eAAT,CAAyB,CAACD,EAAD,EAAKD,IAAL,KACvBZ,GAAGe,MAAH,CAAUJ,IAAV,CAAeK,QAAf,CAAwBH,EAAxB,EACGI,IADH,CACQN,QAAQC,KAAK,IAAL,EAAWD,IAAX,CADhB,EAEGO,KAFH,CAESN,IAFT,CADF;;AAKA,MAAMO,YAAY,MAAM;AACtB;AACAd,MAAIe,GAAJ,CAAQ3B,OAAO,KAAP,CAAR,EAFsB,CAItB;;AACAY,MAAIe,GAAJ,CAAQ1B,WAAW2B,IAAX,EAAR;AACAhB,MAAIe,GAAJ,CAAQ1B,WAAW4B,UAAX,CAAsB;AAAEC,cAAU;AAAZ,GAAtB,CAAR,EANsB,CAQtB;;AACAlB,MAAIe,GAAJ,CAAQzB,aAAR,EATsB,CAWtB;;AACAU,MAAIe,GAAJ,CAAQxB,QAAQ;AACd4B,YAAQrB,QAAQC,GAAR,CAAYqB,cAAZ,IAA8B,wBADxB;AAEdC,WAAOzB,YAFO;AAGd0B,YAAQ,KAHM;AAIdC,uBAAmB;AAJL,GAAR,CAAR;AAMAvB,MAAIe,GAAJ,CAAQvB,SAASgC,UAAT,EAAR;AACAxB,MAAIe,GAAJ,CAAQvB,SAASD,OAAT,EAAR,EAnBsB,CAqBtB;;AACAS,MAAIe,GAAJ,CAAQ,OAAR,EAAiB7B,QAAQ,QAAR,CAAjB;AACAc,MAAIe,GAAJ,CAAQ,MAAR,EAAgB7B,QAAQ,OAAR,CAAhB,EAvBsB,CAyBtB;;AACAc,MAAIe,GAAJ,CAAQ5B,QAAQsC,MAAR,CAAexC,KAAKyC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,QAA3B,CAAf,CAAR,EA1BsB,CA4BtB;;AACA3B,MAAIe,GAAJ,CAAQ,CAACa,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1B,QAAI7C,KAAK8C,OAAL,CAAaH,IAAI3C,IAAjB,EAAuB+C,MAA3B,EAAmC;AACjC,YAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,UAAIE,MAAJ,GAAa,GAAb;AACAL,WAAKG,GAAL;AACD,KAJD,MAIO;AACLH;AACD;AACF,GARD,EA7BsB,CAuCtB;;AACA9B,MAAIe,GAAJ,CAAQ,GAAR,EAAa,CAACa,GAAD,EAAMC,GAAN,KAAc;AACzBA,QAAIO,QAAJ,CAAanD,KAAKyC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,mBAA3B,CAAb;AACD,GAFD,EAxCsB,CA4CtB;;AACA3B,MAAIe,GAAJ,CAAQ,CAACkB,GAAD,EAAML,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AAC/BO,YAAQC,KAAR,CAAcL,GAAd;AACAI,YAAQC,KAAR,CAAcL,IAAIM,KAAlB;AACAV,QAAIM,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB,EAA8BK,IAA9B,CAAmCP,IAAIQ,OAAJ,IAAe,wBAAlD;AACD,GAJD;AAKD,CAlDD;;AAoDA,MAAMC,iBAAiB,MAAM;AAC3B;AACA,QAAMC,SAAS3C,IAAI4C,MAAJ,CAAW/C,IAAX,EAAiB,MAAMwC,QAAQQ,GAAR,CAAa,wBAAuBhD,IAAK,EAAzC,CAAvB,CAAf,CAF2B,CAI3B;;AACA,QAAMiD,KAAK7C,SAAS0C,MAAT,CAAX;;AACAzD,UAAQ,UAAR,EAAoB4D,EAApB;AACD,CAPD;;AASA,MAAMC,SAAS,MAAMpD,GAAGqD,IAAH,CAAQ;AAACC,SAAM;AAAP,CAAR,CAArB,C,CAEA;AACA;AACA;AACA;;;AACA,IAAI/D,QAAQgE,IAAR,KAAiBhD,MAArB,EAA6B;AAC3BN,eAAaoD,IAAb,GACGpC,IADH,CACQmC,MADR,EAEGnC,IAFH,CAEQE,SAFR,EAGGF,IAHH,CAGQ8B,cAHR;AAID,CALD,MAKO;AACL5B;AACD",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/index.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server",
      "sourcesContent": [
        "const path = require('path');\nconst express = require('express');\nconst morgan = require('morgan');\nconst bodyParser = require('body-parser');\nconst compression = require('compression');\nconst session = require('express-session');\nconst passport = require('passport');\nconst SequelizeStore = require('connect-session-sequelize')(session.Store);\nconst db = require('./db');\nconst sessionStore = new SequelizeStore({db});\nconst PORT = process.env.PORT || 8080;\nconst app = express();\nconst socketio = require('socket.io');\nmodule.exports = app;\n\n/**\n * In your development environment, you can keep all of your\n * app's secret API keys in a file called `secrets.js`, in your project\n * root. This file is included in the .gitignore - it will NOT be tracked\n * or show up on Github. On your production server, you can add these\n * keys as environment variables, so that they can still be read by the\n * Node process on process.env\n */\nif (process.env.NODE_ENV !== 'production') require('../secrets')\n\n// passport registration\npassport.serializeUser((user, done) => done(null, user.id))\npassport.deserializeUser((id, done) =>\n  db.models.user.findById(id)\n    .then(user => done(null, user))\n    .catch(done))\n\nconst createApp = () => {\n  // logging middleware\n  app.use(morgan('dev'))\n\n  // body parsing middleware\n  app.use(bodyParser.json())\n  app.use(bodyParser.urlencoded({ extended: true }))\n\n  // compression middleware\n  app.use(compression())\n\n  // session middleware with passport\n  app.use(session({\n    secret: process.env.SESSION_SECRET || 'my best friend is Cody',\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false\n  }))\n  app.use(passport.initialize())\n  app.use(passport.session())\n\n  // auth and api routes\n  app.use('/auth', require('./auth'))\n  app.use('/api', require('./api'))\n\n  // static file-serving middleware\n  app.use(express.static(path.join(__dirname, '..', 'public')))\n\n  // any remaining requests with an extension (.js, .css, etc.) send 404\n  app.use((req, res, next) => {\n    if (path.extname(req.path).length) {\n      const err = new Error('Not found')\n      err.status = 404\n      next(err)\n    } else {\n      next()\n    }\n  })\n\n  // sends index.html\n  app.use('*', (req, res) => {\n    res.sendFile(path.join(__dirname, '..', 'public/index.html'))\n  })\n\n  // error handling endware\n  app.use((err, req, res, next) => {\n    console.error(err)\n    console.error(err.stack)\n    res.status(err.status || 500).send(err.message || 'Internal server error.')\n  })\n}\n\nconst startListening = () => {\n  // start listening (and create a 'server' object representing our server)\n  const server = app.listen(PORT, () => console.log(`Mixing it up on port ${PORT}`))\n\n  // set up our socket control center\n  const io = socketio(server)\n  require('./socket')(io)\n}\n\nconst syncDb = () => db.sync({force:false})\n\n// This evaluates as true when this file is run directly from the command line,\n// i.e. when we say 'node server/index.js' (or 'nodemon server/index.js', or 'nodemon server', etc)\n// It will evaluate false when this module is required by another module - for example,\n// if we wanted to require our app in a test spec\nif (require.main === module) {\n  sessionStore.sync()\n    .then(syncDb)\n    .then(createApp)\n    .then(startListening)\n} else {\n  createApp()\n}\n"
      ]
    },
    "mtime": 1521325376220
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/secrets.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/secrets.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/secrets.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/secrets.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/secrets.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/secrets.js"
      }
    },
    "ast": null,
    "code": "\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIvaG9tZS9kYW5pZWxsZS9HSFAvU2VuaW9yL0J1aWxkQW5kR28tU2VydmVyL3NlY3JldHMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlciIsInNvdXJjZXNDb250ZW50IjpbXX0=",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/secrets.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourcesContent": []
    },
    "mtime": 1521318764174
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/index.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/index.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/index.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/index.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nconst User = require('../db/models/user');\n\nmodule.exports = router;\nrouter.post('/login', (req, res, next) => {\n  User.findOne({\n    where: {\n      email: req.body.email\n    }\n  }).then(user => {\n    if (!user) {\n      res.status(401).send('User not found');\n    } else if (!user.correctPassword(req.body.password)) {\n      res.status(401).send('Incorrect password');\n    } else {\n      req.login(user, err => err ? next(err) : res.json(user));\n    }\n  }).catch(next);\n});\nrouter.post('/signup', (req, res, next) => {\n  User.create(req.body).then(user => {\n    req.login(user, err => err ? next(err) : res.json(user));\n  }).catch(err => {\n    if (err.name === 'SequelizeUniqueConstraintError') {\n      res.status(401).send('User already exists');\n    } else {\n      next(err);\n    }\n  });\n});\nrouter.post('/logout', (req, res) => {\n  req.logout();\n  req.session.destroy();\n  res.redirect('/');\n});\nrouter.get('/me', (req, res) => {\n  res.json(req.user);\n});\nrouter.use('/google', require('./google'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2F1dGgvaW5kZXguanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsIlVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwicG9zdCIsInJlcSIsInJlcyIsIm5leHQiLCJmaW5kT25lIiwid2hlcmUiLCJlbWFpbCIsImJvZHkiLCJ0aGVuIiwidXNlciIsInN0YXR1cyIsInNlbmQiLCJjb3JyZWN0UGFzc3dvcmQiLCJwYXNzd29yZCIsImxvZ2luIiwiZXJyIiwianNvbiIsImNhdGNoIiwiY3JlYXRlIiwibmFtZSIsImxvZ291dCIsInNlc3Npb24iLCJkZXN0cm95IiwicmVkaXJlY3QiLCJnZXQiLCJ1c2UiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVNDLFFBQVEsU0FBUixFQUFtQkMsTUFBbkIsRUFBZjs7QUFDQSxNQUFNQyxPQUFPRixRQUFRLG1CQUFSLENBQWI7O0FBQ0FHLE9BQU9DLE9BQVAsR0FBaUJMLE1BQWpCO0FBRUFBLE9BQU9NLElBQVAsQ0FBWSxRQUFaLEVBQXNCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3hDTixPQUFLTyxPQUFMLENBQWE7QUFBQ0MsV0FBTztBQUFDQyxhQUFPTCxJQUFJTSxJQUFKLENBQVNEO0FBQWpCO0FBQVIsR0FBYixFQUNHRSxJQURILENBQ1FDLFFBQVE7QUFDWixRQUFJLENBQUNBLElBQUwsRUFBVztBQUNUUCxVQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsZ0JBQXJCO0FBQ0QsS0FGRCxNQUVPLElBQUksQ0FBQ0YsS0FBS0csZUFBTCxDQUFxQlgsSUFBSU0sSUFBSixDQUFTTSxRQUE5QixDQUFMLEVBQThDO0FBQ25EWCxVQUFJUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsb0JBQXJCO0FBQ0QsS0FGTSxNQUVBO0FBQ0xWLFVBQUlhLEtBQUosQ0FBVUwsSUFBVixFQUFnQk0sT0FBUUEsTUFBTVosS0FBS1ksR0FBTCxDQUFOLEdBQWtCYixJQUFJYyxJQUFKLENBQVNQLElBQVQsQ0FBMUM7QUFDRDtBQUNGLEdBVEgsRUFVR1EsS0FWSCxDQVVTZCxJQVZUO0FBV0QsQ0FaRDtBQWNBVCxPQUFPTSxJQUFQLENBQVksU0FBWixFQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN6Q04sT0FBS3FCLE1BQUwsQ0FBWWpCLElBQUlNLElBQWhCLEVBQ0dDLElBREgsQ0FDUUMsUUFBUTtBQUNaUixRQUFJYSxLQUFKLENBQVVMLElBQVYsRUFBZ0JNLE9BQVFBLE1BQU1aLEtBQUtZLEdBQUwsQ0FBTixHQUFrQmIsSUFBSWMsSUFBSixDQUFTUCxJQUFULENBQTFDO0FBQ0QsR0FISCxFQUlHUSxLQUpILENBSVNGLE9BQU87QUFDWixRQUFJQSxJQUFJSSxJQUFKLEtBQWEsZ0NBQWpCLEVBQW1EO0FBQ2pEakIsVUFBSVEsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLHFCQUFyQjtBQUNELEtBRkQsTUFFTztBQUNMUixXQUFLWSxHQUFMO0FBQ0Q7QUFDRixHQVZIO0FBV0QsQ0FaRDtBQWNBckIsT0FBT00sSUFBUCxDQUFZLFNBQVosRUFBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDbkNELE1BQUltQixNQUFKO0FBQ0FuQixNQUFJb0IsT0FBSixDQUFZQyxPQUFaO0FBQ0FwQixNQUFJcUIsUUFBSixDQUFhLEdBQWI7QUFDRCxDQUpEO0FBTUE3QixPQUFPOEIsR0FBUCxDQUFXLEtBQVgsRUFBa0IsQ0FBQ3ZCLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQzlCQSxNQUFJYyxJQUFKLENBQVNmLElBQUlRLElBQWI7QUFDRCxDQUZEO0FBSUFmLE9BQU8rQixHQUFQLENBQVcsU0FBWCxFQUFzQjlCLFFBQVEsVUFBUixDQUF0QiIsImZpbGUiOiIvaG9tZS9kYW5pZWxsZS9HSFAvU2VuaW9yL0J1aWxkQW5kR28tU2VydmVyL3NlcnZlci9hdXRoL2luZGV4LmpzIiwic291cmNlUm9vdCI6Ii9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2F1dGgiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByb3V0ZXIgPSByZXF1aXJlKCdleHByZXNzJykuUm91dGVyKClcbmNvbnN0IFVzZXIgPSByZXF1aXJlKCcuLi9kYi9tb2RlbHMvdXNlcicpXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlclxuXG5yb3V0ZXIucG9zdCgnL2xvZ2luJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIFVzZXIuZmluZE9uZSh7d2hlcmU6IHtlbWFpbDogcmVxLmJvZHkuZW1haWx9fSlcbiAgICAudGhlbih1c2VyID0+IHtcbiAgICAgIGlmICghdXNlcikge1xuICAgICAgICByZXMuc3RhdHVzKDQwMSkuc2VuZCgnVXNlciBub3QgZm91bmQnKVxuICAgICAgfSBlbHNlIGlmICghdXNlci5jb3JyZWN0UGFzc3dvcmQocmVxLmJvZHkucGFzc3dvcmQpKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAxKS5zZW5kKCdJbmNvcnJlY3QgcGFzc3dvcmQnKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVxLmxvZ2luKHVzZXIsIGVyciA9PiAoZXJyID8gbmV4dChlcnIpIDogcmVzLmpzb24odXNlcikpKVxuICAgICAgfVxuICAgIH0pXG4gICAgLmNhdGNoKG5leHQpXG59KVxuXG5yb3V0ZXIucG9zdCgnL3NpZ251cCcsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBVc2VyLmNyZWF0ZShyZXEuYm9keSlcbiAgICAudGhlbih1c2VyID0+IHtcbiAgICAgIHJlcS5sb2dpbih1c2VyLCBlcnIgPT4gKGVyciA/IG5leHQoZXJyKSA6IHJlcy5qc29uKHVzZXIpKSlcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgaWYgKGVyci5uYW1lID09PSAnU2VxdWVsaXplVW5pcXVlQ29uc3RyYWludEVycm9yJykge1xuICAgICAgICByZXMuc3RhdHVzKDQwMSkuc2VuZCgnVXNlciBhbHJlYWR5IGV4aXN0cycpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0KGVycilcbiAgICAgIH1cbiAgICB9KVxufSlcblxucm91dGVyLnBvc3QoJy9sb2dvdXQnLCAocmVxLCByZXMpID0+IHtcbiAgcmVxLmxvZ291dCgpXG4gIHJlcS5zZXNzaW9uLmRlc3Ryb3koKVxuICByZXMucmVkaXJlY3QoJy8nKVxufSlcblxucm91dGVyLmdldCgnL21lJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5qc29uKHJlcS51c2VyKVxufSlcblxucm91dGVyLnVzZSgnL2dvb2dsZScsIHJlcXVpcmUoJy4vZ29vZ2xlJykpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/index.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "User",
        "module",
        "exports",
        "post",
        "req",
        "res",
        "next",
        "findOne",
        "where",
        "email",
        "body",
        "then",
        "user",
        "status",
        "send",
        "correctPassword",
        "password",
        "login",
        "err",
        "json",
        "catch",
        "create",
        "name",
        "logout",
        "session",
        "destroy",
        "redirect",
        "get",
        "use"
      ],
      "mappings": "AAAA,MAAMA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,EAAf;;AACA,MAAMC,OAAOF,QAAQ,mBAAR,CAAb;;AACAG,OAAOC,OAAP,GAAiBL,MAAjB;AAEAA,OAAOM,IAAP,CAAY,QAAZ,EAAsB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxCN,OAAKO,OAAL,CAAa;AAACC,WAAO;AAACC,aAAOL,IAAIM,IAAJ,CAASD;AAAjB;AAAR,GAAb,EACGE,IADH,CACQC,QAAQ;AACZ,QAAI,CAACA,IAAL,EAAW;AACTP,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACD,KAFD,MAEO,IAAI,CAACF,KAAKG,eAAL,CAAqBX,IAAIM,IAAJ,CAASM,QAA9B,CAAL,EAA8C;AACnDX,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAArB;AACD,KAFM,MAEA;AACLV,UAAIa,KAAJ,CAAUL,IAAV,EAAgBM,OAAQA,MAAMZ,KAAKY,GAAL,CAAN,GAAkBb,IAAIc,IAAJ,CAASP,IAAT,CAA1C;AACD;AACF,GATH,EAUGQ,KAVH,CAUSd,IAVT;AAWD,CAZD;AAcAT,OAAOM,IAAP,CAAY,SAAZ,EAAuB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACzCN,OAAKqB,MAAL,CAAYjB,IAAIM,IAAhB,EACGC,IADH,CACQC,QAAQ;AACZR,QAAIa,KAAJ,CAAUL,IAAV,EAAgBM,OAAQA,MAAMZ,KAAKY,GAAL,CAAN,GAAkBb,IAAIc,IAAJ,CAASP,IAAT,CAA1C;AACD,GAHH,EAIGQ,KAJH,CAISF,OAAO;AACZ,QAAIA,IAAII,IAAJ,KAAa,gCAAjB,EAAmD;AACjDjB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qBAArB;AACD,KAFD,MAEO;AACLR,WAAKY,GAAL;AACD;AACF,GAVH;AAWD,CAZD;AAcArB,OAAOM,IAAP,CAAY,SAAZ,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnCD,MAAImB,MAAJ;AACAnB,MAAIoB,OAAJ,CAAYC,OAAZ;AACApB,MAAIqB,QAAJ,CAAa,GAAb;AACD,CAJD;AAMA7B,OAAO8B,GAAP,CAAW,KAAX,EAAkB,CAACvB,GAAD,EAAMC,GAAN,KAAc;AAC9BA,MAAIc,IAAJ,CAASf,IAAIQ,IAAb;AACD,CAFD;AAIAf,OAAO+B,GAAP,CAAW,SAAX,EAAsB9B,QAAQ,UAAR,CAAtB",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/index.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth",
      "sourcesContent": [
        "const router = require('express').Router()\nconst User = require('../db/models/user')\nmodule.exports = router\n\nrouter.post('/login', (req, res, next) => {\n  User.findOne({where: {email: req.body.email}})\n    .then(user => {\n      if (!user) {\n        res.status(401).send('User not found')\n      } else if (!user.correctPassword(req.body.password)) {\n        res.status(401).send('Incorrect password')\n      } else {\n        req.login(user, err => (err ? next(err) : res.json(user)))\n      }\n    })\n    .catch(next)\n})\n\nrouter.post('/signup', (req, res, next) => {\n  User.create(req.body)\n    .then(user => {\n      req.login(user, err => (err ? next(err) : res.json(user)))\n    })\n    .catch(err => {\n      if (err.name === 'SequelizeUniqueConstraintError') {\n        res.status(401).send('User already exists')\n      } else {\n        next(err)\n      }\n    })\n})\n\nrouter.post('/logout', (req, res) => {\n  req.logout()\n  req.session.destroy()\n  res.redirect('/')\n})\n\nrouter.get('/me', (req, res) => {\n  res.json(req.user)\n})\n\nrouter.use('/google', require('./google'))\n"
      ]
    },
    "mtime": 1521231979800
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/google.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/google.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/google.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/google.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/google.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/google.js"
      }
    },
    "ast": null,
    "code": "const passport = require('passport');\n\nconst router = require('express').Router();\n\nconst GoogleStrategy = require('passport-google-oauth').OAuth2Strategy;\n\nconst {\n  User\n} = require('../db/models');\n\nmodule.exports = router;\n/**\n * For OAuth keys and other secrets, your Node process will search\n * process.env to find environment variables. On your production server,\n * you will be able to set these environment variables with the appropriate\n * values. In development, a good practice is to keep a separate file with\n * these secrets that you only share with your team - it should NOT be tracked\n * by git! In this case, you may use a file called `secrets.js`, which will\n * set these environment variables like so:\n *\n * process.env.GOOGLE_CLIENT_ID = 'your google client id'\n * process.env.GOOGLE_CLIENT_SECRET = 'your google client secret'\n * process.env.GOOGLE_CALLBACK = '/your/google/callback'\n */\n\nif (!process.env.GOOGLE_CLIENT_ID || !process.env.GOOGLE_CLIENT_SECRET) {\n  console.log('Google client ID / secret not found. Skipping Google OAuth.');\n} else {\n  const googleConfig = {\n    clientID: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    callbackURL: process.env.GOOGLE_CALLBACK\n  };\n  const strategy = new GoogleStrategy(googleConfig, (token, refreshToken, profile, done) => {\n    const googleId = profile.id;\n    const name = profile.displayName;\n    const email = profile.emails[0].value;\n    User.find({\n      where: {\n        googleId\n      }\n    }).then(foundUser => foundUser ? done(null, foundUser) : User.create({\n      name,\n      email,\n      googleId\n    }).then(createdUser => done(null, createdUser))).catch(done);\n  });\n  passport.use(strategy);\n  router.get('/', passport.authenticate('google', {\n    scope: 'email'\n  }));\n  router.get('/callback', passport.authenticate('google', {\n    successRedirect: '/home',\n    failureRedirect: '/login'\n  }));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2F1dGgvZ29vZ2xlLmpzIl0sIm5hbWVzIjpbInBhc3Nwb3J0IiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsIkdvb2dsZVN0cmF0ZWd5IiwiT0F1dGgyU3RyYXRlZ3kiLCJVc2VyIiwibW9kdWxlIiwiZXhwb3J0cyIsInByb2Nlc3MiLCJlbnYiLCJHT09HTEVfQ0xJRU5UX0lEIiwiR09PR0xFX0NMSUVOVF9TRUNSRVQiLCJjb25zb2xlIiwibG9nIiwiZ29vZ2xlQ29uZmlnIiwiY2xpZW50SUQiLCJjbGllbnRTZWNyZXQiLCJjYWxsYmFja1VSTCIsIkdPT0dMRV9DQUxMQkFDSyIsInN0cmF0ZWd5IiwidG9rZW4iLCJyZWZyZXNoVG9rZW4iLCJwcm9maWxlIiwiZG9uZSIsImdvb2dsZUlkIiwiaWQiLCJuYW1lIiwiZGlzcGxheU5hbWUiLCJlbWFpbCIsImVtYWlscyIsInZhbHVlIiwiZmluZCIsIndoZXJlIiwidGhlbiIsImZvdW5kVXNlciIsImNyZWF0ZSIsImNyZWF0ZWRVc2VyIiwiY2F0Y2giLCJ1c2UiLCJnZXQiLCJhdXRoZW50aWNhdGUiLCJzY29wZSIsInN1Y2Nlc3NSZWRpcmVjdCIsImZhaWx1cmVSZWRpcmVjdCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsV0FBV0MsUUFBUSxVQUFSLENBQWpCOztBQUNBLE1BQU1DLFNBQVNELFFBQVEsU0FBUixFQUFtQkUsTUFBbkIsRUFBZjs7QUFDQSxNQUFNQyxpQkFBaUJILFFBQVEsdUJBQVIsRUFBaUNJLGNBQXhEOztBQUNBLE1BQU07QUFBQ0M7QUFBRCxJQUFTTCxRQUFRLGNBQVIsQ0FBZjs7QUFDQU0sT0FBT0MsT0FBUCxHQUFpQk4sTUFBakI7QUFFQTs7Ozs7Ozs7Ozs7Ozs7QUFjQSxJQUFJLENBQUNPLFFBQVFDLEdBQVIsQ0FBWUMsZ0JBQWIsSUFBaUMsQ0FBQ0YsUUFBUUMsR0FBUixDQUFZRSxvQkFBbEQsRUFBd0U7QUFFdEVDLFVBQVFDLEdBQVIsQ0FBWSw2REFBWjtBQUVELENBSkQsTUFJTztBQUVMLFFBQU1DLGVBQWU7QUFDbkJDLGNBQVVQLFFBQVFDLEdBQVIsQ0FBWUMsZ0JBREg7QUFFbkJNLGtCQUFjUixRQUFRQyxHQUFSLENBQVlFLG9CQUZQO0FBR25CTSxpQkFBYVQsUUFBUUMsR0FBUixDQUFZUztBQUhOLEdBQXJCO0FBTUEsUUFBTUMsV0FBVyxJQUFJaEIsY0FBSixDQUFtQlcsWUFBbkIsRUFBaUMsQ0FBQ00sS0FBRCxFQUFRQyxZQUFSLEVBQXNCQyxPQUF0QixFQUErQkMsSUFBL0IsS0FBd0M7QUFDeEYsVUFBTUMsV0FBV0YsUUFBUUcsRUFBekI7QUFDQSxVQUFNQyxPQUFPSixRQUFRSyxXQUFyQjtBQUNBLFVBQU1DLFFBQVFOLFFBQVFPLE1BQVIsQ0FBZSxDQUFmLEVBQWtCQyxLQUFoQztBQUVBekIsU0FBSzBCLElBQUwsQ0FBVTtBQUFDQyxhQUFPO0FBQUNSO0FBQUQ7QUFBUixLQUFWLEVBQ0dTLElBREgsQ0FDUUMsYUFBY0EsWUFDaEJYLEtBQUssSUFBTCxFQUFXVyxTQUFYLENBRGdCLEdBRWhCN0IsS0FBSzhCLE1BQUwsQ0FBWTtBQUFDVCxVQUFEO0FBQU9FLFdBQVA7QUFBY0o7QUFBZCxLQUFaLEVBQ0NTLElBREQsQ0FDTUcsZUFBZWIsS0FBSyxJQUFMLEVBQVdhLFdBQVgsQ0FEckIsQ0FITixFQU1HQyxLQU5ILENBTVNkLElBTlQ7QUFPRCxHQVpnQixDQUFqQjtBQWNBeEIsV0FBU3VDLEdBQVQsQ0FBYW5CLFFBQWI7QUFFQWxCLFNBQU9zQyxHQUFQLENBQVcsR0FBWCxFQUFnQnhDLFNBQVN5QyxZQUFULENBQXNCLFFBQXRCLEVBQWdDO0FBQUNDLFdBQU87QUFBUixHQUFoQyxDQUFoQjtBQUVBeEMsU0FBT3NDLEdBQVAsQ0FBVyxXQUFYLEVBQXdCeEMsU0FBU3lDLFlBQVQsQ0FBc0IsUUFBdEIsRUFBZ0M7QUFDdERFLHFCQUFpQixPQURxQztBQUV0REMscUJBQWlCO0FBRnFDLEdBQWhDLENBQXhCO0FBS0QiLCJmaWxlIjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvYXV0aC9nb29nbGUuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvYXV0aCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhc3Nwb3J0ID0gcmVxdWlyZSgncGFzc3BvcnQnKVxuY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnZXhwcmVzcycpLlJvdXRlcigpXG5jb25zdCBHb29nbGVTdHJhdGVneSA9IHJlcXVpcmUoJ3Bhc3Nwb3J0LWdvb2dsZS1vYXV0aCcpLk9BdXRoMlN0cmF0ZWd5XG5jb25zdCB7VXNlcn0gPSByZXF1aXJlKCcuLi9kYi9tb2RlbHMnKVxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXJcblxuLyoqXG4gKiBGb3IgT0F1dGgga2V5cyBhbmQgb3RoZXIgc2VjcmV0cywgeW91ciBOb2RlIHByb2Nlc3Mgd2lsbCBzZWFyY2hcbiAqIHByb2Nlc3MuZW52IHRvIGZpbmQgZW52aXJvbm1lbnQgdmFyaWFibGVzLiBPbiB5b3VyIHByb2R1Y3Rpb24gc2VydmVyLFxuICogeW91IHdpbGwgYmUgYWJsZSB0byBzZXQgdGhlc2UgZW52aXJvbm1lbnQgdmFyaWFibGVzIHdpdGggdGhlIGFwcHJvcHJpYXRlXG4gKiB2YWx1ZXMuIEluIGRldmVsb3BtZW50LCBhIGdvb2QgcHJhY3RpY2UgaXMgdG8ga2VlcCBhIHNlcGFyYXRlIGZpbGUgd2l0aFxuICogdGhlc2Ugc2VjcmV0cyB0aGF0IHlvdSBvbmx5IHNoYXJlIHdpdGggeW91ciB0ZWFtIC0gaXQgc2hvdWxkIE5PVCBiZSB0cmFja2VkXG4gKiBieSBnaXQhIEluIHRoaXMgY2FzZSwgeW91IG1heSB1c2UgYSBmaWxlIGNhbGxlZCBgc2VjcmV0cy5qc2AsIHdoaWNoIHdpbGxcbiAqIHNldCB0aGVzZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgbGlrZSBzbzpcbiAqXG4gKiBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lEID0gJ3lvdXIgZ29vZ2xlIGNsaWVudCBpZCdcbiAqIHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfU0VDUkVUID0gJ3lvdXIgZ29vZ2xlIGNsaWVudCBzZWNyZXQnXG4gKiBwcm9jZXNzLmVudi5HT09HTEVfQ0FMTEJBQ0sgPSAnL3lvdXIvZ29vZ2xlL2NhbGxiYWNrJ1xuICovXG5cbmlmICghcHJvY2Vzcy5lbnYuR09PR0xFX0NMSUVOVF9JRCB8fCAhcHJvY2Vzcy5lbnYuR09PR0xFX0NMSUVOVF9TRUNSRVQpIHtcblxuICBjb25zb2xlLmxvZygnR29vZ2xlIGNsaWVudCBJRCAvIHNlY3JldCBub3QgZm91bmQuIFNraXBwaW5nIEdvb2dsZSBPQXV0aC4nKVxuXG59IGVsc2Uge1xuXG4gIGNvbnN0IGdvb2dsZUNvbmZpZyA9IHtcbiAgICBjbGllbnRJRDogcHJvY2Vzcy5lbnYuR09PR0xFX0NMSUVOVF9JRCxcbiAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfU0VDUkVULFxuICAgIGNhbGxiYWNrVVJMOiBwcm9jZXNzLmVudi5HT09HTEVfQ0FMTEJBQ0tcbiAgfVxuXG4gIGNvbnN0IHN0cmF0ZWd5ID0gbmV3IEdvb2dsZVN0cmF0ZWd5KGdvb2dsZUNvbmZpZywgKHRva2VuLCByZWZyZXNoVG9rZW4sIHByb2ZpbGUsIGRvbmUpID0+IHtcbiAgICBjb25zdCBnb29nbGVJZCA9IHByb2ZpbGUuaWRcbiAgICBjb25zdCBuYW1lID0gcHJvZmlsZS5kaXNwbGF5TmFtZVxuICAgIGNvbnN0IGVtYWlsID0gcHJvZmlsZS5lbWFpbHNbMF0udmFsdWVcblxuICAgIFVzZXIuZmluZCh7d2hlcmU6IHtnb29nbGVJZH19KVxuICAgICAgLnRoZW4oZm91bmRVc2VyID0+IChmb3VuZFVzZXJcbiAgICAgICAgPyBkb25lKG51bGwsIGZvdW5kVXNlcilcbiAgICAgICAgOiBVc2VyLmNyZWF0ZSh7bmFtZSwgZW1haWwsIGdvb2dsZUlkfSlcbiAgICAgICAgICAudGhlbihjcmVhdGVkVXNlciA9PiBkb25lKG51bGwsIGNyZWF0ZWRVc2VyKSlcbiAgICAgICkpXG4gICAgICAuY2F0Y2goZG9uZSlcbiAgfSlcblxuICBwYXNzcG9ydC51c2Uoc3RyYXRlZ3kpXG5cbiAgcm91dGVyLmdldCgnLycsIHBhc3Nwb3J0LmF1dGhlbnRpY2F0ZSgnZ29vZ2xlJywge3Njb3BlOiAnZW1haWwnfSkpXG5cbiAgcm91dGVyLmdldCgnL2NhbGxiYWNrJywgcGFzc3BvcnQuYXV0aGVudGljYXRlKCdnb29nbGUnLCB7XG4gICAgc3VjY2Vzc1JlZGlyZWN0OiAnL2hvbWUnLFxuICAgIGZhaWx1cmVSZWRpcmVjdDogJy9sb2dpbidcbiAgfSkpXG5cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/google.js"
      ],
      "names": [
        "passport",
        "require",
        "router",
        "Router",
        "GoogleStrategy",
        "OAuth2Strategy",
        "User",
        "module",
        "exports",
        "process",
        "env",
        "GOOGLE_CLIENT_ID",
        "GOOGLE_CLIENT_SECRET",
        "console",
        "log",
        "googleConfig",
        "clientID",
        "clientSecret",
        "callbackURL",
        "GOOGLE_CALLBACK",
        "strategy",
        "token",
        "refreshToken",
        "profile",
        "done",
        "googleId",
        "id",
        "name",
        "displayName",
        "email",
        "emails",
        "value",
        "find",
        "where",
        "then",
        "foundUser",
        "create",
        "createdUser",
        "catch",
        "use",
        "get",
        "authenticate",
        "scope",
        "successRedirect",
        "failureRedirect"
      ],
      "mappings": "AAAA,MAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AACA,MAAMC,SAASD,QAAQ,SAAR,EAAmBE,MAAnB,EAAf;;AACA,MAAMC,iBAAiBH,QAAQ,uBAAR,EAAiCI,cAAxD;;AACA,MAAM;AAACC;AAAD,IAASL,QAAQ,cAAR,CAAf;;AACAM,OAAOC,OAAP,GAAiBN,MAAjB;AAEA;;;;;;;;;;;;;;AAcA,IAAI,CAACO,QAAQC,GAAR,CAAYC,gBAAb,IAAiC,CAACF,QAAQC,GAAR,CAAYE,oBAAlD,EAAwE;AAEtEC,UAAQC,GAAR,CAAY,6DAAZ;AAED,CAJD,MAIO;AAEL,QAAMC,eAAe;AACnBC,cAAUP,QAAQC,GAAR,CAAYC,gBADH;AAEnBM,kBAAcR,QAAQC,GAAR,CAAYE,oBAFP;AAGnBM,iBAAaT,QAAQC,GAAR,CAAYS;AAHN,GAArB;AAMA,QAAMC,WAAW,IAAIhB,cAAJ,CAAmBW,YAAnB,EAAiC,CAACM,KAAD,EAAQC,YAAR,EAAsBC,OAAtB,EAA+BC,IAA/B,KAAwC;AACxF,UAAMC,WAAWF,QAAQG,EAAzB;AACA,UAAMC,OAAOJ,QAAQK,WAArB;AACA,UAAMC,QAAQN,QAAQO,MAAR,CAAe,CAAf,EAAkBC,KAAhC;AAEAzB,SAAK0B,IAAL,CAAU;AAACC,aAAO;AAACR;AAAD;AAAR,KAAV,EACGS,IADH,CACQC,aAAcA,YAChBX,KAAK,IAAL,EAAWW,SAAX,CADgB,GAEhB7B,KAAK8B,MAAL,CAAY;AAACT,UAAD;AAAOE,WAAP;AAAcJ;AAAd,KAAZ,EACCS,IADD,CACMG,eAAeb,KAAK,IAAL,EAAWa,WAAX,CADrB,CAHN,EAMGC,KANH,CAMSd,IANT;AAOD,GAZgB,CAAjB;AAcAxB,WAASuC,GAAT,CAAanB,QAAb;AAEAlB,SAAOsC,GAAP,CAAW,GAAX,EAAgBxC,SAASyC,YAAT,CAAsB,QAAtB,EAAgC;AAACC,WAAO;AAAR,GAAhC,CAAhB;AAEAxC,SAAOsC,GAAP,CAAW,WAAX,EAAwBxC,SAASyC,YAAT,CAAsB,QAAtB,EAAgC;AACtDE,qBAAiB,OADqC;AAEtDC,qBAAiB;AAFqC,GAAhC,CAAxB;AAKD",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth/google.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/auth",
      "sourcesContent": [
        "const passport = require('passport')\nconst router = require('express').Router()\nconst GoogleStrategy = require('passport-google-oauth').OAuth2Strategy\nconst {User} = require('../db/models')\nmodule.exports = router\n\n/**\n * For OAuth keys and other secrets, your Node process will search\n * process.env to find environment variables. On your production server,\n * you will be able to set these environment variables with the appropriate\n * values. In development, a good practice is to keep a separate file with\n * these secrets that you only share with your team - it should NOT be tracked\n * by git! In this case, you may use a file called `secrets.js`, which will\n * set these environment variables like so:\n *\n * process.env.GOOGLE_CLIENT_ID = 'your google client id'\n * process.env.GOOGLE_CLIENT_SECRET = 'your google client secret'\n * process.env.GOOGLE_CALLBACK = '/your/google/callback'\n */\n\nif (!process.env.GOOGLE_CLIENT_ID || !process.env.GOOGLE_CLIENT_SECRET) {\n\n  console.log('Google client ID / secret not found. Skipping Google OAuth.')\n\n} else {\n\n  const googleConfig = {\n    clientID: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    callbackURL: process.env.GOOGLE_CALLBACK\n  }\n\n  const strategy = new GoogleStrategy(googleConfig, (token, refreshToken, profile, done) => {\n    const googleId = profile.id\n    const name = profile.displayName\n    const email = profile.emails[0].value\n\n    User.find({where: {googleId}})\n      .then(foundUser => (foundUser\n        ? done(null, foundUser)\n        : User.create({name, email, googleId})\n          .then(createdUser => done(null, createdUser))\n      ))\n      .catch(done)\n  })\n\n  passport.use(strategy)\n\n  router.get('/', passport.authenticate('google', {scope: 'email'}))\n\n  router.get('/callback', passport.authenticate('google', {\n    successRedirect: '/home',\n    failureRedirect: '/login'\n  }))\n\n}\n"
      ]
    },
    "mtime": 1521231979800
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/api\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/index.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/index.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/index.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/index.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nmodule.exports = router;\nrouter.use('/users', require('./users'));\nrouter.use((req, res, next) => {\n  const error = new Error('Not Found');\n  error.status = 404;\n  next(error);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2FwaS9pbmRleC5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyZXF1aXJlIiwiUm91dGVyIiwibW9kdWxlIiwiZXhwb3J0cyIsInVzZSIsInJlcSIsInJlcyIsIm5leHQiLCJlcnJvciIsIkVycm9yIiwic3RhdHVzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTQyxRQUFRLFNBQVIsRUFBbUJDLE1BQW5CLEVBQWY7O0FBQ0FDLE9BQU9DLE9BQVAsR0FBaUJKLE1BQWpCO0FBRUFBLE9BQU9LLEdBQVAsQ0FBVyxRQUFYLEVBQXFCSixRQUFRLFNBQVIsQ0FBckI7QUFFQUQsT0FBT0ssR0FBUCxDQUFXLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQzdCLFFBQU1DLFFBQVEsSUFBSUMsS0FBSixDQUFVLFdBQVYsQ0FBZDtBQUNBRCxRQUFNRSxNQUFOLEdBQWUsR0FBZjtBQUNBSCxPQUFLQyxLQUFMO0FBQ0QsQ0FKRCIsImZpbGUiOiIvaG9tZS9kYW5pZWxsZS9HSFAvU2VuaW9yL0J1aWxkQW5kR28tU2VydmVyL3NlcnZlci9hcGkvaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvYXBpIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnZXhwcmVzcycpLlJvdXRlcigpXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlclxuXG5yb3V0ZXIudXNlKCcvdXNlcnMnLCByZXF1aXJlKCcuL3VzZXJzJykpXG5cbnJvdXRlci51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKCdOb3QgRm91bmQnKVxuICBlcnJvci5zdGF0dXMgPSA0MDRcbiAgbmV4dChlcnJvcilcbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/index.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "module",
        "exports",
        "use",
        "req",
        "res",
        "next",
        "error",
        "Error",
        "status"
      ],
      "mappings": "AAAA,MAAMA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,EAAf;;AACAC,OAAOC,OAAP,GAAiBJ,MAAjB;AAEAA,OAAOK,GAAP,CAAW,QAAX,EAAqBJ,QAAQ,SAAR,CAArB;AAEAD,OAAOK,GAAP,CAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC7B,QAAMC,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,QAAME,MAAN,GAAe,GAAf;AACAH,OAAKC,KAAL;AACD,CAJD",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/index.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api",
      "sourcesContent": [
        "const router = require('express').Router()\nmodule.exports = router\n\nrouter.use('/users', require('./users'))\n\nrouter.use((req, res, next) => {\n  const error = new Error('Not Found')\n  error.status = 404\n  next(error)\n})\n"
      ]
    },
    "mtime": 1521231979800
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/api\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nconst {\n  User\n} = require('../db/models');\n\nmodule.exports = router;\nrouter.get('/', (req, res, next) => {\n  User.findAll({\n    // explicitly select only the id and email fields - even though\n    // users' passwords are encrypted, it won't help if we just\n    // send everything to anyone who asks!\n    attributes: ['id', 'email']\n  }).then(users => res.json(users)).catch(next);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2FwaS91c2Vycy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyZXF1aXJlIiwiUm91dGVyIiwiVXNlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZmluZEFsbCIsImF0dHJpYnV0ZXMiLCJ0aGVuIiwidXNlcnMiLCJqc29uIiwiY2F0Y2giXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVNDLFFBQVEsU0FBUixFQUFtQkMsTUFBbkIsRUFBZjs7QUFDQSxNQUFNO0FBQUNDO0FBQUQsSUFBU0YsUUFBUSxjQUFSLENBQWY7O0FBQ0FHLE9BQU9DLE9BQVAsR0FBaUJMLE1BQWpCO0FBRUFBLE9BQU9NLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ2xDTixPQUFLTyxPQUFMLENBQWE7QUFDWDtBQUNBO0FBQ0E7QUFDQUMsZ0JBQVksQ0FBQyxJQUFELEVBQU8sT0FBUDtBQUpELEdBQWIsRUFNR0MsSUFOSCxDQU1RQyxTQUFTTCxJQUFJTSxJQUFKLENBQVNELEtBQVQsQ0FOakIsRUFPR0UsS0FQSCxDQU9TTixJQVBUO0FBUUQsQ0FURCIsImZpbGUiOiIvaG9tZS9kYW5pZWxsZS9HSFAvU2VuaW9yL0J1aWxkQW5kR28tU2VydmVyL3NlcnZlci9hcGkvdXNlcnMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvYXBpIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnZXhwcmVzcycpLlJvdXRlcigpXG5jb25zdCB7VXNlcn0gPSByZXF1aXJlKCcuLi9kYi9tb2RlbHMnKVxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXJcblxucm91dGVyLmdldCgnLycsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBVc2VyLmZpbmRBbGwoe1xuICAgIC8vIGV4cGxpY2l0bHkgc2VsZWN0IG9ubHkgdGhlIGlkIGFuZCBlbWFpbCBmaWVsZHMgLSBldmVuIHRob3VnaFxuICAgIC8vIHVzZXJzJyBwYXNzd29yZHMgYXJlIGVuY3J5cHRlZCwgaXQgd29uJ3QgaGVscCBpZiB3ZSBqdXN0XG4gICAgLy8gc2VuZCBldmVyeXRoaW5nIHRvIGFueW9uZSB3aG8gYXNrcyFcbiAgICBhdHRyaWJ1dGVzOiBbJ2lkJywgJ2VtYWlsJ11cbiAgfSlcbiAgICAudGhlbih1c2VycyA9PiByZXMuanNvbih1c2VycykpXG4gICAgLmNhdGNoKG5leHQpXG59KVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "User",
        "module",
        "exports",
        "get",
        "req",
        "res",
        "next",
        "findAll",
        "attributes",
        "then",
        "users",
        "json",
        "catch"
      ],
      "mappings": "AAAA,MAAMA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,EAAf;;AACA,MAAM;AAACC;AAAD,IAASF,QAAQ,cAAR,CAAf;;AACAG,OAAOC,OAAP,GAAiBL,MAAjB;AAEAA,OAAOM,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClCN,OAAKO,OAAL,CAAa;AACX;AACA;AACA;AACAC,gBAAY,CAAC,IAAD,EAAO,OAAP;AAJD,GAAb,EAMGC,IANH,CAMQC,SAASL,IAAIM,IAAJ,CAASD,KAAT,CANjB,EAOGE,KAPH,CAOSN,IAPT;AAQD,CATD",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api/users.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/api",
      "sourcesContent": [
        "const router = require('express').Router()\nconst {User} = require('../db/models')\nmodule.exports = router\n\nrouter.get('/', (req, res, next) => {\n  User.findAll({\n    // explicitly select only the id and email fields - even though\n    // users' passwords are encrypted, it won't help if we just\n    // send everything to anyone who asks!\n    attributes: ['id', 'email']\n  })\n    .then(users => res.json(users))\n    .catch(next)\n})\n"
      ]
    },
    "mtime": 1521231979800
  },
  "{\"sourceRoot\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models\",\"filename\":\"/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.spec.js\",\"babelrc\":false,\"plugins\":[],\"presets\":[],\"passPerPreset\":false,\"envName\":\"test\",\"cwd\":\"/home/danielle/GHP/Senior/BuildAndGo-Server\"}:7.0.0-beta.40:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.spec.js",
      "babelrc": false,
      "envName": "test",
      "cwd": "/home/danielle/GHP/Senior/BuildAndGo-Server",
      "sourceMaps": "both",
      "ast": false,
      "plugins": [],
      "presets": [],
      "passPerPreset": false,
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.spec.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceMapTarget": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.spec.js",
        "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
        "sourceFileName": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.spec.js"
      }
    },
    "ast": null,
    "code": "/* global describe beforeEach it */\nconst {\n  expect\n} = require('chai');\n\nconst db = require('../index');\n\nconst User = db.model('user');\ndescribe('User model', () => {\n  beforeEach(() => {\n    return db.sync({\n      force: true\n    });\n  });\n  describe('instanceMethods', () => {\n    describe('correctPassword', () => {\n      let cody;\n      beforeEach(() => {\n        return User.create({\n          email: 'cody@puppybook.com',\n          password: 'bones'\n        }).then(user => {\n          cody = user;\n        });\n      });\n      it('returns true if the password is correct', () => {\n        expect(cody.correctPassword('bones')).to.be.equal(true);\n      });\n      it('returns false if the password is incorrect', () => {\n        expect(cody.correctPassword('bonez')).to.be.equal(false);\n      });\n    }); // end describe('correctPassword')\n  }); // end describe('instanceMethods')\n}); // end describe('User model')\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL21vZGVscy91c2VyLnNwZWMuanMiXSwibmFtZXMiOlsiZXhwZWN0IiwicmVxdWlyZSIsImRiIiwiVXNlciIsIm1vZGVsIiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwic3luYyIsImZvcmNlIiwiY29keSIsImNyZWF0ZSIsImVtYWlsIiwicGFzc3dvcmQiLCJ0aGVuIiwidXNlciIsIml0IiwiY29ycmVjdFBhc3N3b3JkIiwidG8iLCJiZSIsImVxdWFsIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU07QUFBQ0E7QUFBRCxJQUFXQyxRQUFRLE1BQVIsQ0FBakI7O0FBQ0EsTUFBTUMsS0FBS0QsUUFBUSxVQUFSLENBQVg7O0FBQ0EsTUFBTUUsT0FBT0QsR0FBR0UsS0FBSCxDQUFTLE1BQVQsQ0FBYjtBQUVBQyxTQUFTLFlBQVQsRUFBdUIsTUFBTTtBQUMzQkMsYUFBVyxNQUFNO0FBQ2YsV0FBT0osR0FBR0ssSUFBSCxDQUFRO0FBQUNDLGFBQU87QUFBUixLQUFSLENBQVA7QUFDRCxHQUZEO0FBSUFILFdBQVMsaUJBQVQsRUFBNEIsTUFBTTtBQUNoQ0EsYUFBUyxpQkFBVCxFQUE0QixNQUFNO0FBQ2hDLFVBQUlJLElBQUo7QUFFQUgsaUJBQVcsTUFBTTtBQUNmLGVBQU9ILEtBQUtPLE1BQUwsQ0FBWTtBQUNqQkMsaUJBQU8sb0JBRFU7QUFFakJDLG9CQUFVO0FBRk8sU0FBWixFQUlKQyxJQUpJLENBSUNDLFFBQVE7QUFDWkwsaUJBQU9LLElBQVA7QUFDRCxTQU5JLENBQVA7QUFPRCxPQVJEO0FBVUFDLFNBQUcseUNBQUgsRUFBOEMsTUFBTTtBQUNsRGYsZUFBT1MsS0FBS08sZUFBTCxDQUFxQixPQUFyQixDQUFQLEVBQXNDQyxFQUF0QyxDQUF5Q0MsRUFBekMsQ0FBNENDLEtBQTVDLENBQWtELElBQWxEO0FBQ0QsT0FGRDtBQUlBSixTQUFHLDRDQUFILEVBQWlELE1BQU07QUFDckRmLGVBQU9TLEtBQUtPLGVBQUwsQ0FBcUIsT0FBckIsQ0FBUCxFQUFzQ0MsRUFBdEMsQ0FBeUNDLEVBQXpDLENBQTRDQyxLQUE1QyxDQUFrRCxLQUFsRDtBQUNELE9BRkQ7QUFHRCxLQXBCRCxFQURnQyxDQXFCN0I7QUFDSixHQXRCRCxFQUwyQixDQTJCeEI7QUFDSixDQTVCRCxFLENBNEJHIiwiZmlsZSI6Ii9ob21lL2RhbmllbGxlL0dIUC9TZW5pb3IvQnVpbGRBbmRHby1TZXJ2ZXIvc2VydmVyL2RiL21vZGVscy91c2VyLnNwZWMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvZGFuaWVsbGUvR0hQL1Nlbmlvci9CdWlsZEFuZEdvLVNlcnZlci9zZXJ2ZXIvZGIvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIGRlc2NyaWJlIGJlZm9yZUVhY2ggaXQgKi9cblxuY29uc3Qge2V4cGVjdH0gPSByZXF1aXJlKCdjaGFpJylcbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vaW5kZXgnKVxuY29uc3QgVXNlciA9IGRiLm1vZGVsKCd1c2VyJylcblxuZGVzY3JpYmUoJ1VzZXIgbW9kZWwnLCAoKSA9PiB7XG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIHJldHVybiBkYi5zeW5jKHtmb3JjZTogdHJ1ZX0pXG4gIH0pXG5cbiAgZGVzY3JpYmUoJ2luc3RhbmNlTWV0aG9kcycsICgpID0+IHtcbiAgICBkZXNjcmliZSgnY29ycmVjdFBhc3N3b3JkJywgKCkgPT4ge1xuICAgICAgbGV0IGNvZHlcblxuICAgICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIHJldHVybiBVc2VyLmNyZWF0ZSh7XG4gICAgICAgICAgZW1haWw6ICdjb2R5QHB1cHB5Ym9vay5jb20nLFxuICAgICAgICAgIHBhc3N3b3JkOiAnYm9uZXMnXG4gICAgICAgIH0pXG4gICAgICAgICAgLnRoZW4odXNlciA9PiB7XG4gICAgICAgICAgICBjb2R5ID0gdXNlclxuICAgICAgICAgIH0pXG4gICAgICB9KVxuXG4gICAgICBpdCgncmV0dXJucyB0cnVlIGlmIHRoZSBwYXNzd29yZCBpcyBjb3JyZWN0JywgKCkgPT4ge1xuICAgICAgICBleHBlY3QoY29keS5jb3JyZWN0UGFzc3dvcmQoJ2JvbmVzJykpLnRvLmJlLmVxdWFsKHRydWUpXG4gICAgICB9KVxuXG4gICAgICBpdCgncmV0dXJucyBmYWxzZSBpZiB0aGUgcGFzc3dvcmQgaXMgaW5jb3JyZWN0JywgKCkgPT4ge1xuICAgICAgICBleHBlY3QoY29keS5jb3JyZWN0UGFzc3dvcmQoJ2JvbmV6JykpLnRvLmJlLmVxdWFsKGZhbHNlKVxuICAgICAgfSlcbiAgICB9KSAvLyBlbmQgZGVzY3JpYmUoJ2NvcnJlY3RQYXNzd29yZCcpXG4gIH0pIC8vIGVuZCBkZXNjcmliZSgnaW5zdGFuY2VNZXRob2RzJylcbn0pIC8vIGVuZCBkZXNjcmliZSgnVXNlciBtb2RlbCcpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.spec.js"
      ],
      "names": [
        "expect",
        "require",
        "db",
        "User",
        "model",
        "describe",
        "beforeEach",
        "sync",
        "force",
        "cody",
        "create",
        "email",
        "password",
        "then",
        "user",
        "it",
        "correctPassword",
        "to",
        "be",
        "equal"
      ],
      "mappings": "AAAA;AAEA,MAAM;AAACA;AAAD,IAAWC,QAAQ,MAAR,CAAjB;;AACA,MAAMC,KAAKD,QAAQ,UAAR,CAAX;;AACA,MAAME,OAAOD,GAAGE,KAAH,CAAS,MAAT,CAAb;AAEAC,SAAS,YAAT,EAAuB,MAAM;AAC3BC,aAAW,MAAM;AACf,WAAOJ,GAAGK,IAAH,CAAQ;AAACC,aAAO;AAAR,KAAR,CAAP;AACD,GAFD;AAIAH,WAAS,iBAAT,EAA4B,MAAM;AAChCA,aAAS,iBAAT,EAA4B,MAAM;AAChC,UAAII,IAAJ;AAEAH,iBAAW,MAAM;AACf,eAAOH,KAAKO,MAAL,CAAY;AACjBC,iBAAO,oBADU;AAEjBC,oBAAU;AAFO,SAAZ,EAIJC,IAJI,CAICC,QAAQ;AACZL,iBAAOK,IAAP;AACD,SANI,CAAP;AAOD,OARD;AAUAC,SAAG,yCAAH,EAA8C,MAAM;AAClDf,eAAOS,KAAKO,eAAL,CAAqB,OAArB,CAAP,EAAsCC,EAAtC,CAAyCC,EAAzC,CAA4CC,KAA5C,CAAkD,IAAlD;AACD,OAFD;AAIAJ,SAAG,4CAAH,EAAiD,MAAM;AACrDf,eAAOS,KAAKO,eAAL,CAAqB,OAArB,CAAP,EAAsCC,EAAtC,CAAyCC,EAAzC,CAA4CC,KAA5C,CAAkD,KAAlD;AACD,OAFD;AAGD,KApBD,EADgC,CAqB7B;AACJ,GAtBD,EAL2B,CA2BxB;AACJ,CA5BD,E,CA4BG",
      "file": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models/user.spec.js",
      "sourceRoot": "/home/danielle/GHP/Senior/BuildAndGo-Server/server/db/models",
      "sourcesContent": [
        "/* global describe beforeEach it */\n\nconst {expect} = require('chai')\nconst db = require('../index')\nconst User = db.model('user')\n\ndescribe('User model', () => {\n  beforeEach(() => {\n    return db.sync({force: true})\n  })\n\n  describe('instanceMethods', () => {\n    describe('correctPassword', () => {\n      let cody\n\n      beforeEach(() => {\n        return User.create({\n          email: 'cody@puppybook.com',\n          password: 'bones'\n        })\n          .then(user => {\n            cody = user\n          })\n      })\n\n      it('returns true if the password is correct', () => {\n        expect(cody.correctPassword('bones')).to.be.equal(true)\n      })\n\n      it('returns false if the password is incorrect', () => {\n        expect(cody.correctPassword('bonez')).to.be.equal(false)\n      })\n    }) // end describe('correctPassword')\n  }) // end describe('instanceMethods')\n}) // end describe('User model')\n"
      ]
    },
    "mtime": 1521231979800
  }
}